{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/components/risk-managment/RiskRatingMatrix.jsx"],"sourcesContent":["\"use client\"\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Grid,\r\n  Chip,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Card,\r\n  CardContent,\r\n  Tooltip\r\n} from '@mui/material';\r\n\r\nconst PBTRiskMatrix = () => {\r\n  const [selectedProbability, setSelectedProbability] = useState(null);\r\n  const [selectedImpact, setSelectedImpact] = useState(null);\r\n  const [selectedRisk, setSelectedRisk] = useState(null);\r\n\r\n  // Risk matrix data\r\n  const probabilityLevels = [\r\n    { id: 5, label: 'Almost Certain', color: '#8B5CF6' },\r\n    { id: 4, label: 'Likely', color: '#10B981' },\r\n    { id: 3, label: 'Possible', color: '#F59E0B' },\r\n    { id: 2, label: 'Unlikely', color: '#10B981' },\r\n    { id: 1, label: 'Rare', color: '#059669' }\r\n  ];\r\n\r\n  const impactLevels = [\r\n    { id: 1, label: 'Insignificant', color: '#059669' },\r\n    { id: 2, label: 'Low', color: '#10B981' },\r\n    { id: 3, label: 'Significant', color: '#F59E0B' },\r\n    { id: 4, label: 'Serious', color: '#F97316' },\r\n    { id: 5, label: 'Catastrophic', color: '#DC2626' }\r\n  ];\r\n\r\n  // Risk matrix cells with their corresponding risk levels\r\n  const riskMatrix = [\r\n    [\r\n      { risk: 'Low', color: '#10B981' },\r\n      { risk: 'Moderate', color: '#F59E0B' },\r\n      { risk: 'High', color: '#F97316' },\r\n      { risk: 'High', color: '#F97316' },\r\n      { risk: 'Critical', color: '#DC2626' }\r\n    ],\r\n    [\r\n      { risk: 'Low', color: '#10B981' },\r\n      { risk: 'Moderate', color: '#F59E0B' },\r\n      { risk: 'Moderate', color: '#F59E0B' },\r\n      { risk: 'High', color: '#F97316' },\r\n      { risk: 'Critical', color: '#DC2626' }\r\n    ],\r\n    [\r\n      { risk: 'Negligible', color: '#059669' },\r\n      { risk: 'Low', color: '#10B981' },\r\n      { risk: 'Moderate', color: '#F59E0B' },\r\n      { risk: 'Moderate', color: '#F59E0B' },\r\n      { risk: 'High', color: '#F97316' }\r\n    ],\r\n    [\r\n      { risk: 'Negligible', color: '#059669' },\r\n      { risk: 'Negligible', color: '#059669' },\r\n      { risk: 'Low', color: '#10B981' },\r\n      { risk: 'Moderate', color: '#F59E0B' },\r\n      { risk: 'Moderate', color: '#F59E0B' }\r\n    ],\r\n    [\r\n      { risk: 'Negligible', color: '#059669' },\r\n      { risk: 'Negligible', color: '#059669' },\r\n      { risk: 'Negligible', color: '#059669' },\r\n      { risk: 'Low', color: '#10B981' },\r\n      { risk: 'Low', color: '#10B981' }\r\n    ]\r\n  ];\r\n\r\n  const riskColors = {\r\n    'Negligible': '#059669',\r\n    'Low': '#059669',\r\n    'Moderate': '#10B981',\r\n    'High': '#F59E0B',\r\n    'Critical': '#DC2626'\r\n  };\r\n\r\n  const handleCellClick = (probIndex, impactIndex) => {\r\n    const cell = riskMatrix[probIndex][impactIndex];\r\n    setSelectedProbability(probIndex + 1);\r\n    setSelectedImpact(impactIndex + 1);\r\n    setSelectedRisk(cell);\r\n  };\r\n\r\n  const handleProbabilitySelect = (probId) => {\r\n    setSelectedProbability(probId);\r\n    if (selectedImpact) {\r\n      const cell = riskMatrix[5 - probId][selectedImpact - 1];\r\n      setSelectedRisk(cell);\r\n    }\r\n  };\r\n\r\n  const handleImpactSelect = (impactId) => {\r\n    setSelectedImpact(impactId);\r\n    if (selectedProbability) {\r\n      const cell = riskMatrix[5 - selectedProbability][impactId - 1];\r\n      setSelectedRisk(cell);\r\n    }\r\n  };\r\n\r\n  const getRiskRating = () => {\r\n    if (!selectedRisk) return null;\r\n    return selectedRisk.risk;\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3, maxWidth: 1200, mx: 'auto' }}>\r\n      <Typography variant=\"h4\" gutterBottom align=\"center\" sx={{ mb: 4 }}>\r\n        Risk Matrix - Based on PBT\r\n      </Typography>\r\n\r\n      {/* Selection Controls */}\r\n      <Grid container spacing={3} sx={{ mb: 4 }}>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Probability</InputLabel>\r\n            <Select\r\n              value={selectedProbability || ''}\r\n              label=\"Probability\"\r\n              onChange={(e) => handleProbabilitySelect(e.target.value)}\r\n            >\r\n              {probabilityLevels.map((level) => (\r\n                <MenuItem key={level.id} value={level.id}>\r\n                  {level.id} - {level.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl fullWidth>\r\n            <InputLabel>Impact</InputLabel>\r\n            <Select\r\n              value={selectedImpact || ''}\r\n              label=\"Impact\"\r\n              onChange={(e) => handleImpactSelect(e.target.value)}\r\n            >\r\n              {impactLevels.map((level) => (\r\n                <MenuItem key={level.id} value={level.id}>\r\n                  {level.id} - {level.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* Risk Rating Display */}\r\n      {selectedRisk && (\r\n        <Card sx={{ mb: 4, bgcolor: riskColors[selectedRisk.risk], color: 'white' }}>\r\n          <CardContent>\r\n            <Typography variant=\"h5\" align=\"center\">\r\n              Risk Rating: {getRiskRating()}\r\n            </Typography>\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n\r\n      {/* Risk Matrix */}\r\n      <Paper elevation={3} sx={{ p: 2 }}>\r\n        <Grid container>\r\n          {/* Y-axis labels */}\r\n          <Grid item xs={2}>\r\n            <Box sx={{ height: '100%', display: 'flex', flexDirection: 'column-reverse' }}>\r\n              <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'center', height: 60 }}>\r\n                <Typography variant=\"body2\" sx={{ transform: 'rotate(-90deg)', whiteSpace: 'nowrap' }}>\r\n                  Probability\r\n                </Typography>\r\n              </Box>\r\n              {probabilityLevels.map((level, index) => (\r\n                <Box\r\n                  key={level.id}\r\n                  sx={{\r\n                    height: 60,\r\n                    display: 'flex',\r\n                    alignItems: 'center',\r\n                    justifyContent: 'center',\r\n                    cursor: 'pointer',\r\n                    backgroundColor: selectedProbability === level.id ? level.color : 'transparent',\r\n                    color: selectedProbability === level.id ? 'white' : 'text.primary',\r\n                    '&:hover': { backgroundColor: level.color, color: 'white' },\r\n                    transition: 'all 0.2s'\r\n                  }}\r\n                  onClick={() => handleProbabilitySelect(level.id)}\r\n                >\r\n                  <Tooltip title={level.range}>\r\n                    <Typography variant=\"caption\" sx={{ textAlign: 'center', fontSize: '0.7rem' }}>\r\n                      {level.id} - {level.label}\r\n                    </Typography>\r\n                  </Tooltip>\r\n                </Box>\r\n              ))}\r\n            </Box>\r\n          </Grid>\r\n\r\n          {/* Matrix cells */}\r\n          <Grid item xs={10}>\r\n            <Box>\r\n              {/* Matrix grid */}\r\n              {riskMatrix.map((row, rowIndex) => (\r\n                <Box key={rowIndex} sx={{ display: 'flex' }}>\r\n                  {row.map((cell, colIndex) => (\r\n                    <Box\r\n                      key={`${rowIndex}-${colIndex}`}\r\n                      sx={{\r\n                        width: 120,\r\n                        height: 60,\r\n                        border: '1px solid #ccc',\r\n                        backgroundColor: cell.color,\r\n                        color: 'white',\r\n                        display: 'flex',\r\n                        alignItems: 'center',\r\n                        justifyContent: 'center',\r\n                        cursor: 'pointer',\r\n                        opacity: selectedProbability === (5 - rowIndex) && selectedImpact === (colIndex + 1) ? 1 : 0.8,\r\n                        transform: selectedProbability === (5 - rowIndex) && selectedImpact === (colIndex + 1) ? 'scale(1.05)' : 'scale(1)',\r\n                        transition: 'all 0.2s',\r\n                        '&:hover': {\r\n                          transform: 'scale(1.05)',\r\n                          opacity: 1,\r\n                          zIndex: 1\r\n                        }\r\n                      }}\r\n                      onClick={() => handleCellClick(rowIndex, colIndex)}\r\n                    >\r\n                      <Tooltip title={`Risk: ${cell.risk}`}>\r\n                        <Typography variant=\"caption\" sx={{ textAlign: 'center', fontSize: '0.75rem', fontWeight: 'bold' }}>\r\n                          {cell.risk}\r\n                        </Typography>\r\n                      </Tooltip>\r\n                    </Box>\r\n                  ))}\r\n                </Box>\r\n              ))}\r\n\r\n              {/* X-axis labels */}\r\n              <Box sx={{ display: 'flex', mt: 1 }}>\r\n                {impactLevels.map((level) => (\r\n                  <Box\r\n                    key={level.id}\r\n                    sx={{\r\n                      width: 120,\r\n                      height: 40,\r\n                      display: 'flex',\r\n                      alignItems: 'center',\r\n                      justifyContent: 'center',\r\n                      cursor: 'pointer',\r\n                      backgroundColor: selectedImpact === level.id ? level.color : 'transparent',\r\n                      color: selectedImpact === level.id ? 'white' : 'text.primary',\r\n                      '&:hover': { backgroundColor: level.color, color: 'white' },\r\n                      transition: 'all 0.2s'\r\n                    }}\r\n                    onClick={() => handleImpactSelect(level.id)}\r\n                  >\r\n                    <Typography variant=\"caption\" sx={{ textAlign: 'center', fontSize: '0.7rem' }}>\r\n                      {level.id} - {level.label}\r\n                    </Typography>\r\n                  </Box>\r\n                ))}\r\n              </Box>\r\n              <Typography variant=\"body2\" sx={{ textAlign: 'center', mt: 1 }}>\r\n                Impact\r\n              </Typography>\r\n            </Box>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        {/* Legend */}\r\n        <Box sx={{ mt: 3, display: 'flex', justifyContent: 'center', gap: 1, flexWrap: 'wrap' }}>\r\n          {Object.entries(riskColors).map(([risk, color]) => (\r\n            <Chip\r\n              key={risk}\r\n              label={risk}\r\n              sx={{\r\n                backgroundColor: color,\r\n                color: 'white',\r\n                fontWeight: 'bold'\r\n              }}\r\n            />\r\n          ))}\r\n        </Box>\r\n\r\n        {/* Risk numbering */}\r\n        <Box sx={{ mt: 2, display: 'flex', justifyContent: 'center', gap: 2 }}>\r\n          <Typography variant=\"caption\" color=\"error\">1</Typography>\r\n          <Typography variant=\"caption\" color=\"warning.main\">2</Typography>\r\n          <Typography variant=\"caption\" color=\"info.main\">3</Typography>\r\n          <Typography variant=\"caption\" color=\"warning.main\">5</Typography>\r\n          <Typography variant=\"caption\" color=\"error\">8</Typography>\r\n        </Box>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default PBTRiskMatrix;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 723, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 728, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(DashboardLayout)/risk-managment/risk/[id]/page.jsx"],"sourcesContent":["\"use client\";\r\nimport * as React from 'react';\r\nimport { useTheme } from '@mui/material/styles';\r\nimport { useParams, useRouter } from 'next/navigation';\r\nimport { \r\n  Box, \r\n  Button, \r\n  Typography, \r\n  Grid, \r\n  Paper,\r\n  Divider,\r\n  Chip,\r\n  Avatar,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  IconButton,\r\n  Tabs,\r\n  Tab,\r\n  LinearProgress,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  Link\r\n} from '@mui/material';\r\nimport { \r\n  IconArrowLeft, \r\n  IconEdit,\r\n  IconPrinter,\r\n  IconDownload,\r\n  IconShare2,\r\n  IconChevronDown,\r\n  IconAlertCircle,\r\n  IconShieldCheck,\r\n  IconAlertTriangle,\r\n  IconClipboardList,\r\n  IconBuilding\r\n} from '@tabler/icons-react';\r\nimport PBTRiskMatrix from '@/app/components/risk-managment/RiskRatingMatrix';\r\n\r\n// API Service\r\nconst apiBaseUrl = 'http://4.222.232.224/api/v1';\r\n\r\nasync function fetchData(endpoint) {\r\n  const response = await fetch(`${apiBaseUrl}${endpoint}`);\r\n  if (!response.ok) throw new Error('Network response was not ok');\r\n  return response.json();\r\n}\r\n\r\nconst ViewRiskPage = () => {\r\n  const theme = useTheme();\r\n  const router = useRouter();\r\n  const params = useParams();\r\n  const [activeTab, setActiveTab] = React.useState(0);\r\n  const [riskData, setRiskData] = React.useState(null);\r\n  const [isLoading, setIsLoading] = React.useState(true);\r\n  const [relatedControls, setRelatedControls] = React.useState([]);\r\n  const [relatedIncidents, setRelatedIncidents] = React.useState([]);\r\n  const [businessUnits, setBusinessUnits] = React.useState([]);\r\n  const [users, setUsers] = React.useState([]);\r\n\r\n  // Fetch risk data and related information\r\n  React.useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        setIsLoading(true);\r\n        \r\n        // Fetch risk data\r\n        const risk = await fetchData(`/risks/${params.id}`);\r\n        setRiskData(risk);\r\n        \r\n        // Fetch related controls if any\r\n        if (risk.controlIds && risk.controlIds.length > 0) {\r\n          const controls = await Promise.all(\r\n            risk.controlIds.map(id => fetchData(`/risk-controls/${id}`))\r\n          );\r\n          setRelatedControls(controls);\r\n        }\r\n        \r\n        // Fetch related incidents if any\r\n        if (risk.incidentIds && risk.incidentIds.length > 0) {\r\n          const incidents = await Promise.all(\r\n            risk.incidentIds.map(id => fetchData(`/incidents/${id}`))\r\n          );\r\n          setRelatedIncidents(incidents);\r\n        }\r\n        \r\n        // Fetch business units\r\n        const units = await fetchData('/business-units');\r\n        setBusinessUnits(units.content || []);\r\n        \r\n        // Fetch users\r\n        const usersData = await fetchData('/users');\r\n        setUsers(usersData.content || []);\r\n        \r\n      } catch (error) {\r\n        console.error('Failed to load data:', error);\r\n      } finally {\r\n        setIsLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadData();\r\n  }, [params.id]);\r\n\r\n  // Calculate risk rating\r\n  const calculateRiskRating = () => {\r\n    if (!riskData) return 'UNKNOWN';\r\n    const score = (riskData.inherentProbability * riskData.inherentImpact) / 100;\r\n    if (score >= 80) return 'CRITICAL';\r\n    if (score >= 60) return 'HIGH';\r\n    if (score >= 30) return 'MEDIUM';\r\n    return 'LOW';\r\n  };\r\n\r\n  const getColorForRating = (rating) => {\r\n    switch (rating) {\r\n      case 'CRITICAL': return 'error';\r\n      case 'HIGH': return 'warning';\r\n      case 'MEDIUM': return 'info';\r\n      case 'LOW': return 'success';\r\n      default: return 'default';\r\n    }\r\n  };\r\n\r\n  const handleTabChange = (event, newValue) => {\r\n    setActiveTab(newValue);\r\n  };\r\n\r\n  const handleEdit = () => {\r\n    router.push(`/risk-managment/risk/${params.id}`);\r\n  };\r\n\r\n  const handlePrint = () => {\r\n    window.print();\r\n  };\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <Typography>Loading risk data...</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (!riskData) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\r\n        <Typography>Risk not found</Typography>\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', p: 3 }}>\r\n      {/* Header Section */}\r\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 3 }}>\r\n        <Button\r\n          variant=\"outlined\"\r\n          onClick={() => router.push('/risk-managment')}\r\n          startIcon={<IconArrowLeft size=\"1.1rem\" />}\r\n        >\r\n          Back to Risks\r\n        </Button>\r\n        \r\n        <Box sx={{ display: 'flex', gap: 2 }}>\r\n          <IconButton onClick={handlePrint} title=\"Print Report\">\r\n            <IconPrinter />\r\n          </IconButton>\r\n          <IconButton title=\"Download PDF\">\r\n            <IconDownload />\r\n          </IconButton>\r\n          <IconButton title=\"Share\">\r\n            <IconShare2 />\r\n          </IconButton>\r\n          {/* <Button\r\n            variant=\"contained\"\r\n            onClick={handleEdit}\r\n            startIcon={<IconEdit size=\"1.1rem\" />}\r\n          >\r\n            Edit Risk\r\n          </Button> */}\r\n        </Box>\r\n      </Box>\r\n      \r\n      {/* Risk Title and Basic Info */}\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n          <Typography variant=\"h4\" component=\"h1\">\r\n            {riskData.title}\r\n          </Typography>\r\n          \r\n          <Chip\r\n            label={riskData.status}\r\n            color={\r\n              riskData.status === 'APPROVED' ? 'success' :\r\n              riskData.status === 'DRAFT' ? 'warning' : 'default'\r\n            }\r\n            size=\"medium\"\r\n          />\r\n        </Box>\r\n        \r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <List dense>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <IconClipboardList />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Risk ID\" \r\n                  secondary={riskData.riskId || 'N/A'} \r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <IconAlertCircle />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Category\" \r\n                  secondary={riskData.category?.name || 'N/A'} \r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <IconShieldCheck />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Type\" \r\n                  secondary={riskData.type || 'N/A'} \r\n                />\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <List dense>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <IconAlertTriangle />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Risk Rating\" \r\n                  secondary={\r\n                    <Chip \r\n                      label={calculateRiskRating()} \r\n                      color={getColorForRating(calculateRiskRating())}\r\n                      size=\"small\"\r\n                    />\r\n                  } \r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <IconBuilding />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Owner\" \r\n                  secondary={\r\n                    riskData.owner ? (\r\n                      <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                        <Avatar sx={{ width: 24, height: 24, mr: 1, fontSize: '0.75rem' }}>\r\n                          {riskData.owner.firstName?.[0]}{riskData.owner.lastName?.[0]}\r\n                        </Avatar>\r\n                        {riskData.owner.firstName} {riskData.owner.lastName}\r\n                      </Box>\r\n                    ) : 'Unassigned'\r\n                  } \r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemIcon>\r\n                  <IconClipboardList />\r\n                </ListItemIcon>\r\n                <ListItemText \r\n                  primary=\"Identified Date\" \r\n                  secondary={new Date(riskData.identifiedDate).toLocaleDateString()} \r\n                />\r\n              </ListItem>\r\n            </List>\r\n          </Grid>\r\n        </Grid>\r\n      </Paper>\r\n      \r\n      {/* Tabs for Detailed Information */}\r\n      <Tabs \r\n        value={activeTab} \r\n        onChange={handleTabChange} \r\n        variant=\"scrollable\"\r\n        scrollButtons=\"auto\"\r\n        sx={{ mb: 3 }}\r\n      >\r\n        <Tab label=\"Overview\" />\r\n        <Tab label=\"Assessment\" />\r\n        <Tab label=\"Controls\" />\r\n        <Tab label=\"Incidents\" />\r\n        <Tab label=\"Affected Units\" />\r\n        <Tab label=\"History\" />\r\n      </Tabs>\r\n      \r\n      {/* Overview Tab */}\r\n      {activeTab === 0 && (\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={8}>\r\n            <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\r\n                <IconAlertCircle style={{ marginRight: 8 }} />\r\n                Risk Description\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              <Typography paragraph>\r\n                {riskData.description || 'No description provided'}\r\n              </Typography>\r\n              \r\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\r\n                <IconAlertTriangle style={{ marginRight: 8 }} />\r\n                Root Cause\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              <Typography paragraph>\r\n                {riskData.rootCause || 'No root cause identified'}\r\n              </Typography>\r\n              \r\n              <Typography variant=\"h6\" gutterBottom sx={{ mt: 3, display: 'flex', alignItems: 'center' }}>\r\n                <IconAlertTriangle style={{ marginRight: 8 }} />\r\n                Consequences\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              <Typography paragraph>\r\n                {riskData.consequences || 'No consequences described'}\r\n              </Typography>\r\n            </Paper>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={4}>\r\n            <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Key Attributes\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              \r\n              <List dense>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Priority\" \r\n                    secondary={\r\n                      <Chip \r\n                        label={riskData.priority} \r\n                        color={\r\n                          riskData.priority === 'CRITICAL' ? 'error' :\r\n                          riskData.priority === 'HIGH' ? 'warning' :\r\n                          riskData.priority === 'MEDIUM' ? 'info' : 'success'\r\n                        }\r\n                        size=\"small\"\r\n                      />\r\n                    } \r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Regulatory Requirement\" \r\n                    secondary={riskData.regulatoryRequirement ? 'Yes' : 'No'} \r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Compliance Related\" \r\n                    secondary={riskData.complianceRelated ? 'Yes' : 'No'} \r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Version\" \r\n                    secondary={riskData.version || '1.0'} \r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Last Review Date\" \r\n                    secondary={riskData.reviewDate ? new Date(riskData.reviewDate).toLocaleDateString() : 'Not reviewed'} \r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Next Assessment Date\" \r\n                    secondary={riskData.nextAssessmentDate ? new Date(riskData.nextAssessmentDate).toLocaleDateString() : 'Not scheduled'} \r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n            \r\n            <Paper elevation={3} sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Stakeholders\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              \r\n              {riskData.stakeholders && riskData.stakeholders.length > 0 ? (\r\n                <List dense>\r\n                  {riskData.stakeholders.map(stakeholder => (\r\n                    <ListItem key={stakeholder.id}>\r\n                      <ListItemIcon>\r\n                        <Avatar sx={{ width: 32, height: 32, fontSize: '0.875rem' }}>\r\n                          {stakeholder.firstName?.[0]}{stakeholder.lastName?.[0]}\r\n                        </Avatar>\r\n                      </ListItemIcon>\r\n                      <ListItemText \r\n                        primary={`${stakeholder.firstName} ${stakeholder.lastName}`}\r\n                        secondary={stakeholder.jobTitle} \r\n                      />\r\n                    </ListItem>\r\n                  ))}\r\n                </List>\r\n              ) : (\r\n                <Typography variant=\"body2\" color=\"text.secondary\">\r\n                  No stakeholders assigned\r\n                </Typography>\r\n              )}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      \r\n      {/* Assessment Tab */}\r\n      {activeTab === 1 && (\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={12} md={6}>\r\n            <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Risk Assessment\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              \r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <PBTRiskMatrix/>\r\n                  <Typography variant=\"subtitle2\">\r\n                    Inherent Probability: {riskData.inherentProbability}%\r\n                  </Typography>\r\n                  <LinearProgress \r\n                    variant=\"determinate\" \r\n                    value={riskData.inherentProbability} \r\n                    color={\r\n                      riskData.inherentProbability >= 80 ? 'error' :\r\n                      riskData.inherentProbability >= 50 ? 'warning' : 'info'\r\n                    }\r\n                    sx={{ height: 10, borderRadius: 5, mb: 2 }}\r\n                  />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                  <Typography variant=\"subtitle2\">\r\n                    Inherent Impact: {riskData.inherentImpact}%\r\n                  </Typography>\r\n                  <LinearProgress \r\n                    variant=\"determinate\" \r\n                    value={riskData.inherentImpact} \r\n                    color={\r\n                      riskData.inherentImpact >= 80 ? 'error' :\r\n                      riskData.inherentImpact >= 50 ? 'warning' : 'info'\r\n                    }\r\n                    sx={{ height: 10, borderRadius: 5, mb: 2 }}\r\n                  />\r\n                </Grid>\r\n                \r\n                <Grid item xs={12}>\r\n                  <Box sx={{ \r\n                    p: 2, \r\n                    border: '1px solid', \r\n                    borderColor: theme.palette[getColorForRating(calculateRiskRating())].main,\r\n                    borderRadius: 1,\r\n                    backgroundColor: theme.palette[getColorForRating(calculateRiskRating())].light,\r\n                    textAlign: 'center'\r\n                  }}>\r\n                    <Typography variant=\"h5\">\r\n                      Risk Rating: \r\n                      <Box component=\"span\" sx={{ ml: 1, fontWeight: 'bold' }}>\r\n                        {calculateRiskRating()}\r\n                      </Box>\r\n                    </Typography>\r\n                    <Typography variant=\"caption\">\r\n                      (Probability: {riskData.inherentProbability}% × Impact: {riskData.inherentImpact}%)\r\n                    </Typography>\r\n                  </Box>\r\n                </Grid>\r\n              </Grid>\r\n            </Paper>\r\n            \r\n            <Paper elevation={3} sx={{ p: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Financial Impact\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              \r\n              <List dense>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Potential Financial Impact\" \r\n                    secondary={`${riskData.currency} ${riskData.potentialFinancialImpact?.toLocaleString() || '0'}`} \r\n                  />\r\n                </ListItem>\r\n                <ListItem>\r\n                  <ListItemText \r\n                    primary=\"Currency\" \r\n                    secondary={riskData.currency || 'USD'} \r\n                  />\r\n                </ListItem>\r\n              </List>\r\n            </Paper>\r\n          </Grid>\r\n          \r\n          <Grid item xs={12} md={6}>\r\n            <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n              <Typography variant=\"h6\" gutterBottom>\r\n                Additional Information\r\n              </Typography>\r\n              <Divider sx={{ mb: 2 }} />\r\n              \r\n              <Accordion>\r\n                <AccordionSummary expandIcon={<IconChevronDown />}>\r\n                  <Typography>Assumptions</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    {riskData.assumptions || 'No assumptions documented'}\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n              \r\n              <Accordion>\r\n                <AccordionSummary expandIcon={<IconChevronDown />}>\r\n                  <Typography>External Factors</Typography>\r\n                </AccordionSummary>\r\n                <AccordionDetails>\r\n                  <Typography>\r\n                    {riskData.externalFactors || 'No external factors documented'}\r\n                  </Typography>\r\n                </AccordionDetails>\r\n              </Accordion>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      )}\r\n      \r\n      {/* Controls Tab */}\r\n      {activeTab === 2 && (\r\n        <Paper elevation={3} sx={{ p: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Associated Controls\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              {relatedControls.length} control(s) associated with this risk\r\n            </Typography>\r\n          </Box>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {relatedControls.length > 0 ? (\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Control Name</TableCell>\r\n                    <TableCell>Type</TableCell>\r\n                    <TableCell>Nature</TableCell>\r\n                    <TableCell>Effectiveness</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Owner</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {relatedControls.map((control) => (\r\n                    <TableRow key={control.id}>\r\n                      <TableCell>\r\n                        <Link href={`/controls/${control.id}`} underline=\"hover\">\r\n                          {control.name}\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell>{control.controlType}</TableCell>\r\n                      <TableCell>{control.controlNature}</TableCell>\r\n                      <TableCell>\r\n                        <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                          <Box sx={{ width: '100%', mr: 1 }}>\r\n                            <LinearProgress \r\n                              variant=\"determinate\" \r\n                              value={control.effectiveness} \r\n                              color={\r\n                                control.effectiveness >= 80 ? 'success' :\r\n                                control.effectiveness >= 50 ? 'warning' : 'error'\r\n                              }\r\n                            />\r\n                          </Box>\r\n                          <Typography variant=\"body2\">{control.effectiveness}%</Typography>\r\n                        </Box>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip \r\n                          label={control.status} \r\n                          size=\"small\"\r\n                          color={\r\n                            control.status === 'ACTIVE' ? 'success' :\r\n                            control.status === 'INACTIVE' ? 'error' : 'default'\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {control.owner ? (\r\n                          <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                            <Avatar sx={{ width: 24, height: 24, mr: 1, fontSize: '0.75rem' }}>\r\n                              {control.owner.firstName?.[0]}{control.owner.lastName?.[0]}\r\n                            </Avatar>\r\n                            {control.owner.firstName} {control.owner.lastName}\r\n                          </Box>\r\n                        ) : 'Unassigned'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          ) : (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\r\n              No controls associated with this risk\r\n            </Typography>\r\n          )}\r\n        </Paper>\r\n      )}\r\n      \r\n      {/* Incidents Tab */}\r\n      {activeTab === 3 && (\r\n        <Paper elevation={3} sx={{ p: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Related Incidents\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              {relatedIncidents.length} incident(s) related to this risk\r\n            </Typography>\r\n          </Box>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {relatedIncidents.length > 0 ? (\r\n            <TableContainer>\r\n              <Table>\r\n                <TableHead>\r\n                  <TableRow>\r\n                    <TableCell>Incident Title</TableCell>\r\n                    <TableCell>Severity</TableCell>\r\n                    <TableCell>Date</TableCell>\r\n                    <TableCell>Status</TableCell>\r\n                    <TableCell>Financial Loss</TableCell>\r\n                  </TableRow>\r\n                </TableHead>\r\n                <TableBody>\r\n                  {relatedIncidents.map((incident) => (\r\n                    <TableRow key={incident.id}>\r\n                      <TableCell>\r\n                        <Link href={`/incidents/${incident.id}`} underline=\"hover\">\r\n                          {incident.title}\r\n                        </Link>\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip\r\n                          label={incident.severity}\r\n                          size=\"small\"\r\n                          color={\r\n                            incident.severity === 'CRITICAL' ? 'error' :\r\n                            incident.severity === 'HIGH' ? 'warning' :\r\n                            incident.severity === 'MEDIUM' ? 'info' : 'success'\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {new Date(incident.incidentDate).toLocaleDateString()}\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        <Chip \r\n                          label={incident.status} \r\n                          size=\"small\"\r\n                          color={\r\n                            incident.status === 'CLOSED' ? 'success' :\r\n                            incident.status === 'OPEN' ? 'warning' : 'default'\r\n                          }\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell>\r\n                        {incident.currency || 'USD'} {incident.financialLoss?.toLocaleString() || '0'}\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ))}\r\n                </TableBody>\r\n              </Table>\r\n            </TableContainer>\r\n          ) : (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\r\n              No incidents related to this risk\r\n            </Typography>\r\n          )}\r\n        </Paper>\r\n      )}\r\n      \r\n      {/* Affected Units Tab */}\r\n      {activeTab === 4 && (\r\n        <Paper elevation={3} sx={{ p: 3 }}>\r\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Affected Business Units\r\n            </Typography>\r\n            <Typography variant=\"subtitle2\">\r\n              {riskData.affectedBusinessUnits?.length || 0} unit(s) affected by this risk\r\n            </Typography>\r\n          </Box>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          {riskData.affectedBusinessUnits && riskData.affectedBusinessUnits.length > 0 ? (\r\n            <Grid container spacing={2}>\r\n              {riskData.affectedBusinessUnits.map(unit => (\r\n                <Grid item xs={12} sm={6} md={4} key={unit.id}>\r\n                  <Paper elevation={2} sx={{ p: 2 }}>\r\n                    <Typography variant=\"subtitle1\" gutterBottom>\r\n                      {unit.name}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                      Code: {unit.code}\r\n                    </Typography>\r\n                    {unit.manager && (\r\n                      <Typography variant=\"body2\" sx={{ mt: 1 }}>\r\n                        Manager: {unit.manager.firstName} {unit.manager.lastName}\r\n                      </Typography>\r\n                    )}\r\n                  </Paper>\r\n                </Grid>\r\n              ))}\r\n            </Grid>\r\n          ) : (\r\n            <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\r\n              No business units affected by this risk\r\n            </Typography>\r\n          )}\r\n        </Paper>\r\n      )}\r\n      \r\n      {/* History Tab */}\r\n      {activeTab === 5 && (\r\n        <Paper elevation={3} sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Risk History\r\n          </Typography>\r\n          <Divider sx={{ mb: 3 }} />\r\n          \r\n          <Typography variant=\"body2\" color=\"text.secondary\" sx={{ textAlign: 'center', py: 4 }}>\r\n            History tracking will be implemented in a future release\r\n          </Typography>\r\n        </Paper>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default ViewRiskPage;"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2790, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}