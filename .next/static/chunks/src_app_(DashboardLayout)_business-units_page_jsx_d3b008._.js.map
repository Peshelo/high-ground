{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 5, "column": 0}, "map": {"version":3,"sources":["/turbopack/[project]/src/app/(DashboardLayout)/business-units/page.jsx"],"sourcesContent":["'use client';\r\nimport React, { useEffect, useState } from 'react';\r\nimport {\r\n  Box, Typography, Button, Paper, TextField,\r\n  InputAdornment, Modal, Grid, Table, TableBody,\r\n  TableCell, TableContainer, TableHead, TableRow,\r\n  MenuItem, Select, InputLabel, FormControl\r\n} from '@mui/material';\r\nimport { IconPlus, IconSearch, IconEye } from '@tabler/icons-react';\r\n\r\nconst apiBaseUrl = 'http://4.222.232.224/api/v1';\r\n\r\nexport default function ManageBusinessUnitsPage() {\r\n  const [businessUnits, setBusinessUnits] = useState([]);\r\n  const [users, setUsers] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [openAddModal, setOpenAddModal] = useState(false);\r\n  const [openViewModal, setOpenViewModal] = useState(false);\r\n  const [selectedUnit, setSelectedUnit] = useState(null);\r\n  const [newUnit, setNewUnit] = useState({\r\n    name: '',\r\n    code: '',\r\n    description: '',\r\n    parentUnitId: 0,\r\n    headId: 0,\r\n    location: '',\r\n  });\r\n\r\n  const fetchData = async () => {\r\n    setIsLoading(true);\r\n    try {\r\n      const [unitsRes, usersRes] = await Promise.all([\r\n        fetch(`${apiBaseUrl}/business-units?page=0&size=10&sortBy=id&sortDirection=asc`),\r\n        fetch(`${apiBaseUrl}/users?page=0&size=100&sortBy=id&sortDirection=asc`),\r\n      ]);\r\n      const unitsData = await unitsRes.json();\r\n      const usersData = await usersRes.json();\r\n      setBusinessUnits(unitsData.content || []);\r\n      setUsers(usersData.content || []);\r\n    } catch (error) {\r\n      console.error('Failed to fetch data', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleAddUnit = async () => {\r\n    try {\r\n      const response = await fetch(`${apiBaseUrl}/business-units/create`, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(newUnit),\r\n      });\r\n      if (response.ok) {\r\n        setOpenAddModal(false);\r\n        setNewUnit({\r\n          name: '',\r\n          code: '',\r\n          description: '',\r\n        //   parentUnitId: 0,\r\n          headId: 0,\r\n          location: '',\r\n        });\r\n        fetchData();\r\n      } else {\r\n        console.error('Failed to add unit');\r\n      }\r\n    } catch (error) {\r\n      console.error('Add unit error', error);\r\n    }\r\n  };\r\n\r\n  const handleViewUnit = (unit) => {\r\n    setSelectedUnit(unit);\r\n    setOpenViewModal(true);\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ p: 3 }}>\r\n      <Typography variant=\"h4\" gutterBottom>\r\n        Manage Business Units\r\n      </Typography>\r\n\r\n      <Paper elevation={3} sx={{ p: 3, mb: 3 }}>\r\n        <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 2 }}>\r\n          <TextField\r\n            size=\"small\"\r\n            placeholder=\"Search business units...\"\r\n            InputProps={{\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\">\r\n                  <IconSearch size=\"1rem\" />\r\n                </InputAdornment>\r\n              ),\r\n            }}\r\n          />\r\n          <Button\r\n            variant=\"contained\"\r\n            startIcon={<IconPlus size=\"1.1rem\" />}\r\n            onClick={() => setOpenAddModal(true)}\r\n          >\r\n            Add Business Unit\r\n          </Button>\r\n        </Box>\r\n\r\n        {isLoading ? (\r\n          <Typography>Loading...</Typography>\r\n        ) : (\r\n          <TableContainer>\r\n            <Table>\r\n              <TableHead>\r\n                <TableRow>\r\n                  <TableCell>Name</TableCell>\r\n                  <TableCell>Code</TableCell>\r\n                  <TableCell>Description</TableCell>\r\n                  <TableCell>Location</TableCell>\r\n                  <TableCell>Head</TableCell>\r\n                  <TableCell>Actions</TableCell>\r\n                </TableRow>\r\n              </TableHead>\r\n              <TableBody>\r\n                {businessUnits.map((unit) => (\r\n                  <TableRow key={unit.id}>\r\n                    <TableCell>{unit.name}</TableCell>\r\n                    <TableCell>{unit.code}</TableCell>\r\n                    <TableCell>{unit.description}</TableCell>\r\n                    <TableCell>{unit.location}</TableCell>\r\n                    <TableCell>{unit.headFullName || '—'}</TableCell>\r\n                    <TableCell>\r\n                      <Button\r\n                        size=\"small\"\r\n                        startIcon={<IconEye size=\"1rem\" />}\r\n                        onClick={() => handleViewUnit(unit)}\r\n                      >\r\n                        View\r\n                      </Button>\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))}\r\n              </TableBody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </Paper>\r\n\r\n      {/* Add Modal */}\r\n      <Modal open={openAddModal} onClose={() => setOpenAddModal(false)}>\r\n        <Paper sx={{ p: 4, width: 500, mx: 'auto', mt: '5%', position: 'relative' }}>\r\n          <Typography variant=\"h6\" gutterBottom>Add Business Unit</Typography>\r\n          <Grid container spacing={2}>\r\n            {['name', 'code', 'description', 'location'].map((field) => (\r\n              <Grid item xs={12} key={field}>\r\n                <TextField\r\n                  label={field.charAt(0).toUpperCase() + field.slice(1)}\r\n                  fullWidth\r\n                  value={newUnit[field]}\r\n                  onChange={(e) => setNewUnit({ ...newUnit, [field]: e.target.value })}\r\n                />\r\n              </Grid>\r\n            ))}\r\n            <Grid item xs={12}>\r\n              <FormControl fullWidth>\r\n                <InputLabel>Head of Unit</InputLabel>\r\n                <Select\r\n                  value={newUnit.headId}\r\n                  label=\"Head of Unit\"\r\n                  onChange={(e) => setNewUnit({ ...newUnit, headId: e.target.value })}\r\n                >\r\n                  {users.map((user) => (\r\n                    <MenuItem key={user.id} value={user.id}>\r\n                      {user.fullName}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12}>\r\n              <Button fullWidth variant=\"contained\" onClick={handleAddUnit}>\r\n                Save\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n      </Modal>\r\n\r\n      {/* View Modal */}\r\n      <Modal open={openViewModal} onClose={() => setOpenViewModal(false)}>\r\n        <Paper sx={{ p: 4, width: 500, mx: 'auto', mt: '5%' }}>\r\n          <Typography variant=\"h6\" gutterBottom>View Business Unit</Typography>\r\n          {selectedUnit ? (\r\n            <Box>\r\n              <Typography><strong>Name:</strong> {selectedUnit.name}</Typography>\r\n              <Typography><strong>Code:</strong> {selectedUnit.code}</Typography>\r\n              <Typography><strong>Description:</strong> {selectedUnit.description}</Typography>\r\n              <Typography><strong>Location:</strong> {selectedUnit.location}</Typography>\r\n              <Typography><strong>Head:</strong> {selectedUnit.headFullName || '—'}</Typography>\r\n            </Box>\r\n          ) : (\r\n            <Typography>No unit selected</Typography>\r\n          )}\r\n        </Paper>\r\n      </Modal>\r\n    </Box>\r\n  );\r\n}\r\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 604, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}