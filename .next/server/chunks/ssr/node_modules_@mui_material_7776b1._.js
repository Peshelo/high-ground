module.exports = {

"[project]/node_modules/@mui/material/styles/identifier.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const __TURBOPACK__default__export__ = '$$material';

})()),
"[project]/node_modules/@mui/material/styles/ThemeProvider.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>ThemeProvider
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/prop-types/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$ThemeProvider$2f$ThemeProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__ThemeProvider$3e$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/ThemeProvider/ThemeProvider.js [app-ssr] (ecmascript) <export default as ThemeProvider>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$identifier$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/identifier.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
'use client';
;
;
const _excluded = [
    "theme"
];
;
;
;
;
;
function ThemeProvider(_ref) {
    let { theme: themeInput } = _ref, props = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(_ref, _excluded);
    const scopedTheme = themeInput[__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$identifier$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]];
    let finalTheme = scopedTheme || themeInput;
    if (typeof themeInput !== 'function') {
        if (scopedTheme && !scopedTheme.vars) {
            finalTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, scopedTheme, {
                vars: null
            });
        } else if (themeInput && !themeInput.vars) {
            finalTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, themeInput, {
                vars: null
            });
        }
    }
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$ThemeProvider$2f$ThemeProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__ThemeProvider$3e$__["ThemeProvider"], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, props, {
        themeId: scopedTheme ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$identifier$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"] : undefined,
        theme: finalTheme
    }));
}
("TURBOPACK compile-time truthy", 1) ? ThemeProvider.propTypes = {
    /**
   * Your component tree.
   */ children: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].node,
    /**
   * A theme object. You can provide a function to extend the outer theme.
   */ theme: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].oneOfType([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].object,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].func
    ]).isRequired
} : ("TURBOPACK unreachable", undefined);

})()),
"[project]/node_modules/@mui/material/styles/ThemeProvider.js [app-ssr] (ecmascript) <export default as ThemeProvider>": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "ThemeProvider": ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$ThemeProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$ThemeProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/ThemeProvider.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";

})()),
"[project]/node_modules/@mui/material/DefaultPropsProvider/DefaultPropsProvider.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__,
    "useDefaultProps": ()=>useDefaultProps
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/prop-types/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$DefaultPropsProvider$2f$DefaultPropsProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/DefaultPropsProvider/DefaultPropsProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
'use client';
;
;
;
;
;
function DefaultPropsProvider(props) {
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$DefaultPropsProvider$2f$DefaultPropsProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, props));
}
("TURBOPACK compile-time truthy", 1) ? DefaultPropsProvider.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │ To update them, edit the TypeScript types and run `pnpm proptypes`. │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * @ignore
   */ children: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].node,
    /**
   * @ignore
   */ value: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].object.isRequired
} : ("TURBOPACK unreachable", undefined);
const __TURBOPACK__default__export__ = DefaultPropsProvider;
function useDefaultProps(params) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$DefaultPropsProvider$2f$DefaultPropsProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultProps"])(params);
}

})()),
"[project]/node_modules/@mui/material/styles/createMixins.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>createMixins
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
function createMixins(breakpoints, mixins) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
        toolbar: {
            minHeight: 56,
            [breakpoints.up('xs')]: {
                '@media (orientation: landscape)': {
                    minHeight: 48
                }
            },
            [breakpoints.up('sm')]: {
                minHeight: 64
            }
        }
    }, mixins);
}

})()),
"[project]/node_modules/@mui/material/colors/common.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const common = {
    black: '#000',
    white: '#fff'
};
const __TURBOPACK__default__export__ = common;

})()),
"[project]/node_modules/@mui/material/colors/grey.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const grey = {
    50: '#fafafa',
    100: '#f5f5f5',
    200: '#eeeeee',
    300: '#e0e0e0',
    400: '#bdbdbd',
    500: '#9e9e9e',
    600: '#757575',
    700: '#616161',
    800: '#424242',
    900: '#212121',
    A100: '#f5f5f5',
    A200: '#eeeeee',
    A400: '#bdbdbd',
    A700: '#616161'
};
const __TURBOPACK__default__export__ = grey;

})()),
"[project]/node_modules/@mui/material/colors/purple.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const purple = {
    50: '#f3e5f5',
    100: '#e1bee7',
    200: '#ce93d8',
    300: '#ba68c8',
    400: '#ab47bc',
    500: '#9c27b0',
    600: '#8e24aa',
    700: '#7b1fa2',
    800: '#6a1b9a',
    900: '#4a148c',
    A100: '#ea80fc',
    A200: '#e040fb',
    A400: '#d500f9',
    A700: '#aa00ff'
};
const __TURBOPACK__default__export__ = purple;

})()),
"[project]/node_modules/@mui/material/colors/red.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const red = {
    50: '#ffebee',
    100: '#ffcdd2',
    200: '#ef9a9a',
    300: '#e57373',
    400: '#ef5350',
    500: '#f44336',
    600: '#e53935',
    700: '#d32f2f',
    800: '#c62828',
    900: '#b71c1c',
    A100: '#ff8a80',
    A200: '#ff5252',
    A400: '#ff1744',
    A700: '#d50000'
};
const __TURBOPACK__default__export__ = red;

})()),
"[project]/node_modules/@mui/material/colors/orange.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const orange = {
    50: '#fff3e0',
    100: '#ffe0b2',
    200: '#ffcc80',
    300: '#ffb74d',
    400: '#ffa726',
    500: '#ff9800',
    600: '#fb8c00',
    700: '#f57c00',
    800: '#ef6c00',
    900: '#e65100',
    A100: '#ffd180',
    A200: '#ffab40',
    A400: '#ff9100',
    A700: '#ff6d00'
};
const __TURBOPACK__default__export__ = orange;

})()),
"[project]/node_modules/@mui/material/colors/blue.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const blue = {
    50: '#e3f2fd',
    100: '#bbdefb',
    200: '#90caf9',
    300: '#64b5f6',
    400: '#42a5f5',
    500: '#2196f3',
    600: '#1e88e5',
    700: '#1976d2',
    800: '#1565c0',
    900: '#0d47a1',
    A100: '#82b1ff',
    A200: '#448aff',
    A400: '#2979ff',
    A700: '#2962ff'
};
const __TURBOPACK__default__export__ = blue;

})()),
"[project]/node_modules/@mui/material/colors/lightBlue.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const lightBlue = {
    50: '#e1f5fe',
    100: '#b3e5fc',
    200: '#81d4fa',
    300: '#4fc3f7',
    400: '#29b6f6',
    500: '#03a9f4',
    600: '#039be5',
    700: '#0288d1',
    800: '#0277bd',
    900: '#01579b',
    A100: '#80d8ff',
    A200: '#40c4ff',
    A400: '#00b0ff',
    A700: '#0091ea'
};
const __TURBOPACK__default__export__ = lightBlue;

})()),
"[project]/node_modules/@mui/material/colors/green.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const green = {
    50: '#e8f5e9',
    100: '#c8e6c9',
    200: '#a5d6a7',
    300: '#81c784',
    400: '#66bb6a',
    500: '#4caf50',
    600: '#43a047',
    700: '#388e3c',
    800: '#2e7d32',
    900: '#1b5e20',
    A100: '#b9f6ca',
    A200: '#69f0ae',
    A400: '#00e676',
    A700: '#00c853'
};
const __TURBOPACK__default__export__ = green;

})()),
"[project]/node_modules/@mui/material/styles/createPalette.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "dark": ()=>dark,
    "default": ()=>createPalette,
    "light": ()=>light
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$formatMuiErrorMessage$2f$formatMuiErrorMessage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$deepmerge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/deepmerge/deepmerge.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$colorManipulator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/colorManipulator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$common$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/colors/common.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$grey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/colors/grey.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$purple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/colors/purple.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$red$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/colors/red.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$orange$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/colors/orange.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$blue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/colors/blue.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$lightBlue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/colors/lightBlue.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$green$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/colors/green.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
const _excluded = [
    "mode",
    "contrastThreshold",
    "tonalOffset"
];
;
;
;
;
;
;
;
;
;
;
const light = {
    // The colors used to style the text.
    text: {
        // The most important text.
        primary: 'rgba(0, 0, 0, 0.87)',
        // Secondary text.
        secondary: 'rgba(0, 0, 0, 0.6)',
        // Disabled text have even lower visual prominence.
        disabled: 'rgba(0, 0, 0, 0.38)'
    },
    // The color used to divide different elements.
    divider: 'rgba(0, 0, 0, 0.12)',
    // The background colors used to style the surfaces.
    // Consistency between these values is important.
    background: {
        paper: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$common$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].white,
        default: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$common$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].white
    },
    // The colors used to style the action elements.
    action: {
        // The color of an active action like an icon button.
        active: 'rgba(0, 0, 0, 0.54)',
        // The color of an hovered action.
        hover: 'rgba(0, 0, 0, 0.04)',
        hoverOpacity: 0.04,
        // The color of a selected action.
        selected: 'rgba(0, 0, 0, 0.08)',
        selectedOpacity: 0.08,
        // The color of a disabled action.
        disabled: 'rgba(0, 0, 0, 0.26)',
        // The background color of a disabled action.
        disabledBackground: 'rgba(0, 0, 0, 0.12)',
        disabledOpacity: 0.38,
        focus: 'rgba(0, 0, 0, 0.12)',
        focusOpacity: 0.12,
        activatedOpacity: 0.12
    }
};
const dark = {
    text: {
        primary: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$common$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].white,
        secondary: 'rgba(255, 255, 255, 0.7)',
        disabled: 'rgba(255, 255, 255, 0.5)',
        icon: 'rgba(255, 255, 255, 0.5)'
    },
    divider: 'rgba(255, 255, 255, 0.12)',
    background: {
        paper: '#121212',
        default: '#121212'
    },
    action: {
        active: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$common$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].white,
        hover: 'rgba(255, 255, 255, 0.08)',
        hoverOpacity: 0.08,
        selected: 'rgba(255, 255, 255, 0.16)',
        selectedOpacity: 0.16,
        disabled: 'rgba(255, 255, 255, 0.3)',
        disabledBackground: 'rgba(255, 255, 255, 0.12)',
        disabledOpacity: 0.38,
        focus: 'rgba(255, 255, 255, 0.12)',
        focusOpacity: 0.12,
        activatedOpacity: 0.24
    }
};
function addLightOrDark(intent, direction, shade, tonalOffset) {
    const tonalOffsetLight = tonalOffset.light || tonalOffset;
    const tonalOffsetDark = tonalOffset.dark || tonalOffset * 1.5;
    if (!intent[direction]) {
        if (intent.hasOwnProperty(shade)) {
            intent[direction] = intent[shade];
        } else if (direction === 'light') {
            intent.light = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$colorManipulator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["lighten"])(intent.main, tonalOffsetLight);
        } else if (direction === 'dark') {
            intent.dark = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$colorManipulator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["darken"])(intent.main, tonalOffsetDark);
        }
    }
}
function getDefaultPrimary(mode = 'light') {
    if (mode === 'dark') {
        return {
            main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$blue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][200],
            light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$blue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][50],
            dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$blue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][400]
        };
    }
    return {
        main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$blue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][700],
        light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$blue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][400],
        dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$blue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][800]
    };
}
function getDefaultSecondary(mode = 'light') {
    if (mode === 'dark') {
        return {
            main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$purple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][200],
            light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$purple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][50],
            dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$purple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][400]
        };
    }
    return {
        main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$purple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][500],
        light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$purple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][300],
        dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$purple$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][700]
    };
}
function getDefaultError(mode = 'light') {
    if (mode === 'dark') {
        return {
            main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$red$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][500],
            light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$red$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][300],
            dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$red$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][700]
        };
    }
    return {
        main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$red$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][700],
        light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$red$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][400],
        dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$red$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][800]
    };
}
function getDefaultInfo(mode = 'light') {
    if (mode === 'dark') {
        return {
            main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$lightBlue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][400],
            light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$lightBlue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][300],
            dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$lightBlue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][700]
        };
    }
    return {
        main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$lightBlue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][700],
        light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$lightBlue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][500],
        dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$lightBlue$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][900]
    };
}
function getDefaultSuccess(mode = 'light') {
    if (mode === 'dark') {
        return {
            main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$green$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][400],
            light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$green$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][300],
            dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$green$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][700]
        };
    }
    return {
        main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$green$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][800],
        light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$green$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][500],
        dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$green$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][900]
    };
}
function getDefaultWarning(mode = 'light') {
    if (mode === 'dark') {
        return {
            main: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$orange$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][400],
            light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$orange$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][300],
            dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$orange$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][700]
        };
    }
    return {
        main: '#ed6c02',
        // closest to orange[800] that pass 3:1.
        light: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$orange$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][500],
        dark: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$orange$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][900]
    };
}
function createPalette(palette) {
    const { mode = 'light', contrastThreshold = 3, tonalOffset = 0.2 } = palette, other = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(palette, _excluded);
    const primary = palette.primary || getDefaultPrimary(mode);
    const secondary = palette.secondary || getDefaultSecondary(mode);
    const error = palette.error || getDefaultError(mode);
    const info = palette.info || getDefaultInfo(mode);
    const success = palette.success || getDefaultSuccess(mode);
    const warning = palette.warning || getDefaultWarning(mode);
    // Use the same logic as
    // Bootstrap: https://github.com/twbs/bootstrap/blob/1d6e3710dd447de1a200f29e8fa521f8a0908f70/scss/_functions.scss#L59
    // and material-components-web https://github.com/material-components/material-components-web/blob/ac46b8863c4dab9fc22c4c662dc6bd1b65dd652f/packages/mdc-theme/_functions.scss#L54
    function getContrastText(background) {
        const contrastText = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$colorManipulator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getContrastRatio"])(background, dark.text.primary) >= contrastThreshold ? dark.text.primary : light.text.primary;
        if ("TURBOPACK compile-time truthy", 1) {
            const contrast = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$colorManipulator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getContrastRatio"])(background, contrastText);
            if (contrast < 3) {
                console.error([
                    `MUI: The contrast ratio of ${contrast}:1 for ${contrastText} on ${background}`,
                    'falls below the WCAG recommended absolute minimum contrast ratio of 3:1.',
                    'https://www.w3.org/TR/2008/REC-WCAG20-20081211/#visual-audio-contrast-contrast'
                ].join('\n'));
            }
        }
        return contrastText;
    }
    const augmentColor = ({ color, name, mainShade = 500, lightShade = 300, darkShade = 700 })=>{
        color = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, color);
        if (!color.main && color[mainShade]) {
            color.main = color[mainShade];
        }
        if (!color.hasOwnProperty('main')) {
            throw new Error(("TURBOPACK compile-time truthy", 1) ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.
The color object needs to have a \`main\` property or a \`${mainShade}\` property.` : ("TURBOPACK unreachable", undefined));
        }
        if (typeof color.main !== 'string') {
            throw new Error(("TURBOPACK compile-time truthy", 1) ? `MUI: The color${name ? ` (${name})` : ''} provided to augmentColor(color) is invalid.
\`color.main\` should be a string, but \`${JSON.stringify(color.main)}\` was provided instead.

Did you intend to use one of the following approaches?

import { green } from "@mui/material/colors";

const theme1 = createTheme({ palette: {
  primary: green,
} });

const theme2 = createTheme({ palette: {
  primary: { main: green[500] },
} });` : ("TURBOPACK unreachable", undefined));
        }
        addLightOrDark(color, 'light', lightShade, tonalOffset);
        addLightOrDark(color, 'dark', darkShade, tonalOffset);
        if (!color.contrastText) {
            color.contrastText = getContrastText(color.main);
        }
        return color;
    };
    const modes = {
        dark,
        light
    };
    if ("TURBOPACK compile-time truthy", 1) {
        if (!modes[mode]) {
            console.error(`MUI: The palette mode \`${mode}\` is not supported.`);
        }
    }
    const paletteOutput = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$deepmerge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
        // A collection of common colors.
        common: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$common$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]),
        // prevent mutable object.
        // The palette mode, can be light or dark.
        mode,
        // The colors used to represent primary interface elements for a user.
        primary: augmentColor({
            color: primary,
            name: 'primary'
        }),
        // The colors used to represent secondary interface elements for a user.
        secondary: augmentColor({
            color: secondary,
            name: 'secondary',
            mainShade: 'A400',
            lightShade: 'A200',
            darkShade: 'A700'
        }),
        // The colors used to represent interface elements that the user should be made aware of.
        error: augmentColor({
            color: error,
            name: 'error'
        }),
        // The colors used to represent potentially dangerous actions or important messages.
        warning: augmentColor({
            color: warning,
            name: 'warning'
        }),
        // The colors used to present information to the user that is neutral and not necessarily important.
        info: augmentColor({
            color: info,
            name: 'info'
        }),
        // The colors used to indicate the successful completion of an action that user triggered.
        success: augmentColor({
            color: success,
            name: 'success'
        }),
        // The grey colors.
        grey: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$colors$2f$grey$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
        // Used by `getContrastText()` to maximize the contrast between
        // the background and the text.
        contrastThreshold,
        // Takes a background color and returns the text color that maximizes the contrast.
        getContrastText,
        // Generate a rich color object.
        augmentColor,
        // Used by the functions below to shift a color's luminance by approximately
        // two indexes within its tonal palette.
        // E.g., shift from Red 500 to Red 300 or Red 700.
        tonalOffset
    }, modes[mode]), other);
    return paletteOutput;
}

})()),
"[project]/node_modules/@mui/material/styles/createTypography.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>createTypography
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$deepmerge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/deepmerge/deepmerge.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
const _excluded = [
    "fontFamily",
    "fontSize",
    "fontWeightLight",
    "fontWeightRegular",
    "fontWeightMedium",
    "fontWeightBold",
    "htmlFontSize",
    "allVariants",
    "pxToRem"
];
;
function round(value) {
    return Math.round(value * 1e5) / 1e5;
}
const caseAllCaps = {
    textTransform: 'uppercase'
};
const defaultFontFamily = '"Roboto", "Helvetica", "Arial", sans-serif';
function createTypography(palette, typography) {
    const _ref = typeof typography === 'function' ? typography(palette) : typography, { fontFamily = defaultFontFamily, // The default font size of the Material Specification.
    fontSize = 14, // px
    fontWeightLight = 300, fontWeightRegular = 400, fontWeightMedium = 500, fontWeightBold = 700, // Tell MUI what's the font-size on the html element.
    // 16px is the default font-size used by browsers.
    htmlFontSize = 16, // Apply the CSS properties to all the variants.
    allVariants, pxToRem: pxToRem2 } = _ref, other = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(_ref, _excluded);
    if ("TURBOPACK compile-time truthy", 1) {
        if (typeof fontSize !== 'number') {
            console.error('MUI: `fontSize` is required to be a number.');
        }
        if (typeof htmlFontSize !== 'number') {
            console.error('MUI: `htmlFontSize` is required to be a number.');
        }
    }
    const coef = fontSize / 14;
    const pxToRem = pxToRem2 || ((size)=>`${size / htmlFontSize * coef}rem`);
    const buildVariant = (fontWeight, size, lineHeight, letterSpacing, casing)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
            fontFamily,
            fontWeight,
            fontSize: pxToRem(size),
            // Unitless following https://meyerweb.com/eric/thoughts/2006/02/08/unitless-line-heights/
            lineHeight
        }, fontFamily === defaultFontFamily ? {
            letterSpacing: `${round(letterSpacing / size)}em`
        } : {}, casing, allVariants);
    const variants = {
        h1: buildVariant(fontWeightLight, 96, 1.167, -1.5),
        h2: buildVariant(fontWeightLight, 60, 1.2, -0.5),
        h3: buildVariant(fontWeightRegular, 48, 1.167, 0),
        h4: buildVariant(fontWeightRegular, 34, 1.235, 0.25),
        h5: buildVariant(fontWeightRegular, 24, 1.334, 0),
        h6: buildVariant(fontWeightMedium, 20, 1.6, 0.15),
        subtitle1: buildVariant(fontWeightRegular, 16, 1.75, 0.15),
        subtitle2: buildVariant(fontWeightMedium, 14, 1.57, 0.1),
        body1: buildVariant(fontWeightRegular, 16, 1.5, 0.15),
        body2: buildVariant(fontWeightRegular, 14, 1.43, 0.15),
        button: buildVariant(fontWeightMedium, 14, 1.75, 0.4, caseAllCaps),
        caption: buildVariant(fontWeightRegular, 12, 1.66, 0.4),
        overline: buildVariant(fontWeightRegular, 12, 2.66, 1, caseAllCaps),
        // TODO v6: Remove handling of 'inherit' variant from the theme as it is already handled in Material UI's Typography component. Also, remember to remove the associated types.
        inherit: {
            fontFamily: 'inherit',
            fontWeight: 'inherit',
            fontSize: 'inherit',
            lineHeight: 'inherit',
            letterSpacing: 'inherit'
        }
    };
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$deepmerge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
        htmlFontSize,
        pxToRem,
        fontFamily,
        fontSize,
        fontWeightLight,
        fontWeightRegular,
        fontWeightMedium,
        fontWeightBold
    }, variants), other, {
        clone: false // No need to clone deep
    });
}

})()),
"[project]/node_modules/@mui/material/styles/shadows.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const shadowKeyUmbraOpacity = 0.2;
const shadowKeyPenumbraOpacity = 0.14;
const shadowAmbientShadowOpacity = 0.12;
function createShadow(...px) {
    return [
        `${px[0]}px ${px[1]}px ${px[2]}px ${px[3]}px rgba(0,0,0,${shadowKeyUmbraOpacity})`,
        `${px[4]}px ${px[5]}px ${px[6]}px ${px[7]}px rgba(0,0,0,${shadowKeyPenumbraOpacity})`,
        `${px[8]}px ${px[9]}px ${px[10]}px ${px[11]}px rgba(0,0,0,${shadowAmbientShadowOpacity})`
    ].join(',');
}
// Values from https://github.com/material-components/material-components-web/blob/be8747f94574669cb5e7add1a7c54fa41a89cec7/packages/mdc-elevation/_variables.scss
const shadows = [
    'none',
    createShadow(0, 2, 1, -1, 0, 1, 1, 0, 0, 1, 3, 0),
    createShadow(0, 3, 1, -2, 0, 2, 2, 0, 0, 1, 5, 0),
    createShadow(0, 3, 3, -2, 0, 3, 4, 0, 0, 1, 8, 0),
    createShadow(0, 2, 4, -1, 0, 4, 5, 0, 0, 1, 10, 0),
    createShadow(0, 3, 5, -1, 0, 5, 8, 0, 0, 1, 14, 0),
    createShadow(0, 3, 5, -1, 0, 6, 10, 0, 0, 1, 18, 0),
    createShadow(0, 4, 5, -2, 0, 7, 10, 1, 0, 2, 16, 1),
    createShadow(0, 5, 5, -3, 0, 8, 10, 1, 0, 3, 14, 2),
    createShadow(0, 5, 6, -3, 0, 9, 12, 1, 0, 3, 16, 2),
    createShadow(0, 6, 6, -3, 0, 10, 14, 1, 0, 4, 18, 3),
    createShadow(0, 6, 7, -4, 0, 11, 15, 1, 0, 4, 20, 3),
    createShadow(0, 7, 8, -4, 0, 12, 17, 2, 0, 5, 22, 4),
    createShadow(0, 7, 8, -4, 0, 13, 19, 2, 0, 5, 24, 4),
    createShadow(0, 7, 9, -4, 0, 14, 21, 2, 0, 5, 26, 4),
    createShadow(0, 8, 9, -5, 0, 15, 22, 2, 0, 6, 28, 5),
    createShadow(0, 8, 10, -5, 0, 16, 24, 2, 0, 6, 30, 5),
    createShadow(0, 8, 11, -5, 0, 17, 26, 2, 0, 6, 32, 5),
    createShadow(0, 9, 11, -5, 0, 18, 28, 2, 0, 7, 34, 6),
    createShadow(0, 9, 12, -6, 0, 19, 29, 2, 0, 7, 36, 6),
    createShadow(0, 10, 13, -6, 0, 20, 31, 3, 0, 8, 38, 7),
    createShadow(0, 10, 13, -6, 0, 21, 33, 3, 0, 8, 40, 7),
    createShadow(0, 10, 14, -6, 0, 22, 35, 3, 0, 8, 42, 7),
    createShadow(0, 11, 14, -7, 0, 23, 36, 3, 0, 9, 44, 8),
    createShadow(0, 11, 15, -7, 0, 24, 38, 3, 0, 9, 46, 8)
];
const __TURBOPACK__default__export__ = shadows;

})()),
"[project]/node_modules/@mui/material/styles/createTransitions.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>createTransitions,
    "duration": ()=>duration,
    "easing": ()=>easing
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
const _excluded = [
    "duration",
    "easing",
    "delay"
];
const easing = {
    // This is the most common easing curve.
    easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',
    // Objects enter the screen at full velocity from off-screen and
    // slowly decelerate to a resting point.
    easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',
    // Objects leave the screen at full velocity. They do not decelerate when off-screen.
    easeIn: 'cubic-bezier(0.4, 0, 1, 1)',
    // The sharp curve is used by objects that may return to the screen at any time.
    sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'
};
const duration = {
    shortest: 150,
    shorter: 200,
    short: 250,
    // most basic recommended timing
    standard: 300,
    // this is to be used in complex animations
    complex: 375,
    // recommended when something is entering screen
    enteringScreen: 225,
    // recommended when something is leaving screen
    leavingScreen: 195
};
function formatMs(milliseconds) {
    return `${Math.round(milliseconds)}ms`;
}
function getAutoHeightDuration(height) {
    if (!height) {
        return 0;
    }
    const constant = height / 36;
    // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10
    return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);
}
function createTransitions(inputTransitions) {
    const mergedEasing = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, easing, inputTransitions.easing);
    const mergedDuration = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, duration, inputTransitions.duration);
    const create = (props = [
        'all'
    ], options = {})=>{
        const { duration: durationOption = mergedDuration.standard, easing: easingOption = mergedEasing.easeInOut, delay = 0 } = options, other = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(options, _excluded);
        if ("TURBOPACK compile-time truthy", 1) {
            const isString = (value)=>typeof value === 'string';
            // IE11 support, replace with Number.isNaN
            // eslint-disable-next-line no-restricted-globals
            const isNumber = (value)=>!isNaN(parseFloat(value));
            if (!isString(props) && !Array.isArray(props)) {
                console.error('MUI: Argument "props" must be a string or Array.');
            }
            if (!isNumber(durationOption) && !isString(durationOption)) {
                console.error(`MUI: Argument "duration" must be a number or a string but found ${durationOption}.`);
            }
            if (!isString(easingOption)) {
                console.error('MUI: Argument "easing" must be a string.');
            }
            if (!isNumber(delay) && !isString(delay)) {
                console.error('MUI: Argument "delay" must be a number or a string.');
            }
            if (typeof options !== 'object') {
                console.error([
                    'MUI: Secong argument of transition.create must be an object.',
                    "Arguments should be either `create('prop1', options)` or `create(['prop1', 'prop2'], options)`"
                ].join('\n'));
            }
            if (Object.keys(other).length !== 0) {
                console.error(`MUI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);
            }
        }
        return (Array.isArray(props) ? props : [
            props
        ]).map((animatedProp)=>`${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');
    };
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
        getAutoHeightDuration,
        create
    }, inputTransitions, {
        easing: mergedEasing,
        duration: mergedDuration
    });
}

})()),
"[project]/node_modules/@mui/material/styles/zIndex.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

// We need to centralize the zIndex definitions as they work
// like global values in the browser.
__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
const zIndex = {
    mobileStepper: 1000,
    fab: 1050,
    speedDial: 1050,
    appBar: 1100,
    drawer: 1200,
    modal: 1300,
    snackbar: 1400,
    tooltip: 1500
};
const __TURBOPACK__default__export__ = zIndex;

})()),
"[project]/node_modules/@mui/material/styles/createTheme.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "createMuiTheme": ()=>createMuiTheme,
    "default": ()=>__TURBOPACK__default__export__
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$formatMuiErrorMessage$2f$formatMuiErrorMessage$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/formatMuiErrorMessage/formatMuiErrorMessage.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$deepmerge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/deepmerge/deepmerge.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$styleFunctionSx$2f$styleFunctionSx$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/styleFunctionSx/styleFunctionSx.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$styleFunctionSx$2f$defaultSxConfig$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__unstable_defaultSxConfig$3e$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/styleFunctionSx/defaultSxConfig.js [app-ssr] (ecmascript) <export default as unstable_defaultSxConfig>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$createTheme$2f$createTheme$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/createTheme/createTheme.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$generateUtilityClass$2f$generateUtilityClass$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/utils/esm/generateUtilityClass/generateUtilityClass.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createMixins$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/createMixins.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createPalette$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/createPalette.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createTypography$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/createTypography.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$shadows$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/shadows.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createTransitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/createTransitions.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$zIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/zIndex.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
;
;
;
const _excluded = [
    "breakpoints",
    "mixins",
    "spacing",
    "palette",
    "transitions",
    "typography",
    "shape"
];
;
;
;
;
;
;
;
;
;
;
function createTheme(options = {}, ...args) {
    const { mixins: mixinsInput = {}, palette: paletteInput = {}, transitions: transitionsInput = {}, typography: typographyInput = {} } = options, other = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$objectWithoutPropertiesLoose$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(options, _excluded);
    if (options.vars && // The error should throw only for the root theme creation because user is not allowed to use a custom node `vars`.
    // `generateCssVars` is the closest identifier for checking that the `options` is a result of `extendTheme` with CSS variables so that user can create new theme for nested ThemeProvider.
    options.generateCssVars === undefined) {
        throw new Error(("TURBOPACK compile-time truthy", 1) ? `MUI: \`vars\` is a private field used for CSS variables support.
Please use another name.` : ("TURBOPACK unreachable", undefined));
    }
    const palette = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createPalette$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(paletteInput);
    const systemTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$createTheme$2f$createTheme$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(options);
    let muiTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$deepmerge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(systemTheme, {
        mixins: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createMixins$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(systemTheme.breakpoints, mixinsInput),
        palette,
        // Don't use [...shadows] until you've verified its transpiled code is not invoking the iterator protocol.
        shadows: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$shadows$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].slice(),
        typography: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createTypography$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(palette, typographyInput),
        transitions: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createTransitions$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(transitionsInput),
        zIndex: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$zIndex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])
    });
    muiTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$deepmerge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(muiTheme, other);
    muiTheme = args.reduce((acc, argument)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$deepmerge$2f$deepmerge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(acc, argument), muiTheme);
    if ("TURBOPACK compile-time truthy", 1) {
        // TODO v6: Refactor to use globalStateClassesMapping from @mui/utils once `readOnly` state class is used in Rating component.
        const stateClasses = [
            'active',
            'checked',
            'completed',
            'disabled',
            'error',
            'expanded',
            'focused',
            'focusVisible',
            'required',
            'selected'
        ];
        const traverse = (node, component)=>{
            let key;
            // eslint-disable-next-line guard-for-in, no-restricted-syntax
            for(key in node){
                const child = node[key];
                if (stateClasses.indexOf(key) !== -1 && Object.keys(child).length > 0) {
                    if ("TURBOPACK compile-time truthy", 1) {
                        const stateClass = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$utils$2f$esm$2f$generateUtilityClass$2f$generateUtilityClass$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])('', key);
                        console.error([
                            `MUI: The \`${component}\` component increases ` + `the CSS specificity of the \`${key}\` internal state.`,
                            'You can not override it like this: ',
                            JSON.stringify(node, null, 2),
                            '',
                            `Instead, you need to use the '&.${stateClass}' syntax:`,
                            JSON.stringify({
                                root: {
                                    [`&.${stateClass}`]: child
                                }
                            }, null, 2),
                            '',
                            'https://mui.com/r/state-classes-guide'
                        ].join('\n'));
                    }
                    // Remove the style to prevent global conflicts.
                    node[key] = {};
                }
            }
        };
        Object.keys(muiTheme.components).forEach((component)=>{
            const styleOverrides = muiTheme.components[component].styleOverrides;
            if (styleOverrides && component.indexOf('Mui') === 0) {
                traverse(styleOverrides, component);
            }
        });
    }
    muiTheme.unstable_sxConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$styleFunctionSx$2f$defaultSxConfig$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__unstable_defaultSxConfig$3e$__["unstable_defaultSxConfig"], other == null ? void 0 : other.unstable_sxConfig);
    muiTheme.unstable_sx = function sx(props) {
        return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$styleFunctionSx$2f$styleFunctionSx$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
            sx: props,
            theme: this
        });
    };
    return muiTheme;
}
let warnedOnce = false;
function createMuiTheme(...args) {
    if ("TURBOPACK compile-time truthy", 1) {
        if (!warnedOnce) {
            warnedOnce = true;
            console.error([
                'MUI: the createMuiTheme function was renamed to createTheme.',
                '',
                "You should use `import { createTheme } from '@mui/material/styles'`"
            ].join('\n'));
        }
    }
    return createTheme(...args);
}
const __TURBOPACK__default__export__ = createTheme;

})()),
"[project]/node_modules/@mui/material/styles/defaultTheme.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createTheme$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/createTheme.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
'use client';
;
const defaultTheme = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createTheme$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])();
const __TURBOPACK__default__export__ = defaultTheme;

})()),
"[project]/node_modules/@mui/material/GlobalStyles/GlobalStyles.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "default": ()=>__TURBOPACK__default__export__
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/prop-types/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$GlobalStyles$2f$GlobalStyles$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__GlobalStyles$3e$__ = __turbopack_import__("[project]/node_modules/@mui/system/esm/GlobalStyles/GlobalStyles.js [app-ssr] (ecmascript) <export default as GlobalStyles>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$defaultTheme$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/defaultTheme.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$identifier$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/identifier.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
'use client';
;
;
;
;
;
;
;
function GlobalStyles(props) {
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$system$2f$esm$2f$GlobalStyles$2f$GlobalStyles$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$export__default__as__GlobalStyles$3e$__["GlobalStyles"], (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({}, props, {
        defaultTheme: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$defaultTheme$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"],
        themeId: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$identifier$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]
    }));
}
("TURBOPACK compile-time truthy", 1) ? GlobalStyles.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * The styles you want to apply globally.
   */ styles: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ /* @typescript-to-proptypes-ignore */ ["default"].oneOfType([
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].array,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].func,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].number,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].object,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].string,
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].bool
    ])
} : ("TURBOPACK unreachable", undefined);
const __TURBOPACK__default__export__ = GlobalStyles;

})()),
"[project]/node_modules/@mui/material/CssBaseline/CssBaseline.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "body": ()=>body,
    "default": ()=>__TURBOPACK__default__export__,
    "html": ()=>html,
    "styles": ()=>styles
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@babel/runtime/helpers/esm/extends.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/prop-types/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$DefaultPropsProvider$2f$DefaultPropsProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/DefaultPropsProvider/DefaultPropsProvider.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$GlobalStyles$2f$GlobalStyles$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/GlobalStyles/GlobalStyles.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";
'use client';
;
;
;
;
;
;
;
const html = (theme, enableColorScheme)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
        WebkitFontSmoothing: 'antialiased',
        // Antialiasing.
        MozOsxFontSmoothing: 'grayscale',
        // Antialiasing.
        // Change from `box-sizing: content-box` so that `width`
        // is not affected by `padding` or `border`.
        boxSizing: 'border-box',
        // Fix font resize problem in iOS
        WebkitTextSizeAdjust: '100%'
    }, enableColorScheme && !theme.vars && {
        colorScheme: theme.palette.mode
    });
const body = (theme)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
        color: (theme.vars || theme).palette.text.primary
    }, theme.typography.body1, {
        backgroundColor: (theme.vars || theme).palette.background.default,
        '@media print': {
            // Save printer ink.
            backgroundColor: (theme.vars || theme).palette.common.white
        }
    });
const styles = (theme, enableColorScheme = false)=>{
    var _theme$components;
    const colorSchemeStyles = {};
    if (enableColorScheme && theme.colorSchemes) {
        Object.entries(theme.colorSchemes).forEach(([key, scheme])=>{
            var _scheme$palette;
            colorSchemeStyles[theme.getColorSchemeSelector(key).replace(/\s*&/, '')] = {
                colorScheme: (_scheme$palette = scheme.palette) == null ? void 0 : _scheme$palette.mode
            };
        });
    }
    let defaultStyles = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
        html: html(theme, enableColorScheme),
        '*, *::before, *::after': {
            boxSizing: 'inherit'
        },
        'strong, b': {
            fontWeight: theme.typography.fontWeightBold
        },
        body: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$babel$2f$runtime$2f$helpers$2f$esm$2f$extends$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])({
            margin: 0
        }, body(theme), {
            // Add support for document.body.requestFullScreen().
            // Other elements, if background transparent, are not supported.
            '&::backdrop': {
                backgroundColor: (theme.vars || theme).palette.background.default
            }
        })
    }, colorSchemeStyles);
    const themeOverrides = (_theme$components = theme.components) == null || (_theme$components = _theme$components.MuiCssBaseline) == null ? void 0 : _theme$components.styleOverrides;
    if (themeOverrides) {
        defaultStyles = [
            defaultStyles,
            themeOverrides
        ];
    }
    return defaultStyles;
};
/**
 * Kickstart an elegant, consistent, and simple baseline to build upon.
 */ function CssBaseline(inProps) {
    const props = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$DefaultPropsProvider$2f$DefaultPropsProvider$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["useDefaultProps"])({
        props: inProps,
        name: 'MuiCssBaseline'
    });
    const { children, enableColorScheme = false } = props;
    return /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsxs"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__.Fragment, {
        children: [
            /*#__PURE__*/ (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$server$2f$future$2f$route$2d$modules$2f$app$2d$page$2f$vendored$2f$ssr$2f$react$2d$jsx$2d$runtime$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["jsx"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$GlobalStyles$2f$GlobalStyles$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"], {
                styles: (theme)=>styles(theme, enableColorScheme)
            }),
            children
        ]
    });
}
("TURBOPACK compile-time truthy", 1) ? CssBaseline.propTypes = {
    // ┌────────────────────────────── Warning ──────────────────────────────┐
    // │ These PropTypes are generated from the TypeScript type definitions. │
    // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │
    // └─────────────────────────────────────────────────────────────────────┘
    /**
   * You can wrap a node.
   */ children: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].node,
    /**
   * Enable `color-scheme` CSS property to use `theme.palette.mode`.
   * For more details, check out https://developer.mozilla.org/en-US/docs/Web/CSS/color-scheme
   * For browser support, check out https://caniuse.com/?search=color-scheme
   * @default false
   */ enableColorScheme: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$prop$2d$types$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].bool
} : ("TURBOPACK unreachable", undefined);
const __TURBOPACK__default__export__ = CssBaseline;

})()),
"[project]/node_modules/@mui/material/styles/createTheme.js [app-ssr] (ecmascript) <export default as createTheme>": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "createTheme": ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createTheme$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"]
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$mui$2f$material$2f$styles$2f$createTheme$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@mui/material/styles/createTheme.js [app-ssr] (ecmascript)");
"__TURBOPACK__ecmascript__hoisting__location__";

})()),
"[project]/node_modules/@mui/material/locale/index.js [app-ssr] (ecmascript)": (({ r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__ }) => (() => {
"use strict";

__turbopack_esm__({
    "amET": ()=>amET,
    "arEG": ()=>arEG,
    "arSA": ()=>arSA,
    "arSD": ()=>arSD,
    "azAZ": ()=>azAZ,
    "beBY": ()=>beBY,
    "bgBG": ()=>bgBG,
    "bnBD": ()=>bnBD,
    "caES": ()=>caES,
    "csCZ": ()=>csCZ,
    "daDK": ()=>daDK,
    "deDE": ()=>deDE,
    "elGR": ()=>elGR,
    "enUS": ()=>enUS,
    "esES": ()=>esES,
    "etEE": ()=>etEE,
    "faIR": ()=>faIR,
    "fiFI": ()=>fiFI,
    "frFR": ()=>frFR,
    "heIL": ()=>heIL,
    "hiIN": ()=>hiIN,
    "hrHR": ()=>hrHR,
    "huHU": ()=>huHU,
    "hyAM": ()=>hyAM,
    "idID": ()=>idID,
    "isIS": ()=>isIS,
    "itIT": ()=>itIT,
    "jaJP": ()=>jaJP,
    "khKH": ()=>khKH,
    "kkKZ": ()=>kkKZ,
    "koKR": ()=>koKR,
    "kuCKB": ()=>kuCKB,
    "kuLatn": ()=>kuLatn,
    "mkMK": ()=>mkMK,
    "msMS": ()=>msMS,
    "myMY": ()=>myMY,
    "nbNO": ()=>nbNO,
    "neNP": ()=>neNP,
    "nlNL": ()=>nlNL,
    "nnNO": ()=>nnNO,
    "plPL": ()=>plPL,
    "ptBR": ()=>ptBR,
    "ptPT": ()=>ptPT,
    "roRO": ()=>roRO,
    "ruRU": ()=>ruRU,
    "siLK": ()=>siLK,
    "skSK": ()=>skSK,
    "srRS": ()=>srRS,
    "svSE": ()=>svSE,
    "thTH": ()=>thTH,
    "tlTL": ()=>tlTL,
    "trTR": ()=>trTR,
    "ukUA": ()=>ukUA,
    "urPK": ()=>urPK,
    "viVN": ()=>viVN,
    "zhCN": ()=>zhCN,
    "zhHK": ()=>zhHK,
    "zhTW": ()=>zhTW
});
const amET = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'መንገድ አሳይ'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'ወደ መጀመሪያው ገጽ ይሂዱ';
                    }
                    if (type === 'last') {
                        return 'ወደ መጨረሻው ገጽ ይሂዱ';
                    }
                    if (type === 'next') {
                        return 'ወደ ቀጣዩ ገጽ ይሂዱ';
                    }
                    // if (type === 'previous') {
                    return 'ወደ ቀዳሚው ገጽ ይሂዱ';
                },
                labelRowsPerPage: 'ረድፎች በአንድ ገጽ:',
                labelDisplayedRows: ({ from, to, count })=>`${from}-${to} ከ ${count !== -1 ? count : `${to} በላይ`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ኮከ${value !== 1 ? 'ቦች' : 'ብ'}`,
                emptyLabelText: 'ባዶ'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'አጽዳ',
                closeText: 'ዝጋ',
                loadingText: 'በመጫን ላይ…',
                noOptionsText: 'አማራጮች የሉም',
                openText: 'ክፈት'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'ዝጋ'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'የገጽ አሰሳ',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'ወደ '}ገጽ ${page}${selected ? '' : ' ሂድ'}`;
                    }
                    if (type === 'first') {
                        return 'ወደ መጀመሪያው ገጽ ይሂዱ';
                    }
                    if (type === 'last') {
                        return 'ወደ መጨረሻው ገጽ ይሂዱ';
                    }
                    if (type === 'next') {
                        return 'ወደ ቀጣዩ ገጽ ይሂዱ';
                    }
                    // if (type === 'previous') {
                    return 'ወደ ቀዳሚው ገጽ ይሂዱ';
                }
            }
        }
    }
};
const arEG = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'إظهار المسار'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'انتقل إلى الصفحة الأولى';
                    }
                    if (type === 'last') {
                        return 'انتقل إلى الصفحة الأخيرة';
                    }
                    if (type === 'next') {
                        return 'انتقل إلى الصفحة التالية';
                    }
                    // if (type === 'previous') {
                    return 'انتقل إلى الصفحة السابقة';
                },
                labelRowsPerPage: 'عدد الصفوف في الصفحة:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,
                emptyLabelText: 'فارغ'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'مسح',
                closeText: 'إغلاق',
                loadingText: 'جار التحميل...',
                noOptionsText: 'لا يوجد خيارات',
                openText: 'فتح'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'إغلاق'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'التنقل عبر الصفحات',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;
                    }
                    if (type === 'first') {
                        return 'انتقل إلى الصفحة الأولى';
                    }
                    if (type === 'last') {
                        return 'انتقل إلى الصفحة الأخيرة';
                    }
                    if (type === 'next') {
                        return 'انتقل إلى الصفحة التالية';
                    }
                    // if (type === 'previous') {
                    return 'انتقل إلى الصفحة السابقة';
                }
            }
        }
    }
};
const arSA = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'إظهار المسار'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'الانتقال إلى الصفحة الأولى';
                    }
                    if (type === 'last') {
                        return 'الانتقال إلى الصفحة الأخيرة';
                    }
                    if (type === 'next') {
                        return 'الانتقال إلى الصفحة التالية';
                    }
                    // if (type === 'previous') {
                    return 'الانتقال إلى الصفحة السابقة';
                },
                labelRowsPerPage: 'عدد الصفوف في الصفحة:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,
                emptyLabelText: 'فارغ'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'مسح',
                closeText: 'إغلاق',
                loadingText: 'جار التحميل...',
                noOptionsText: 'لا توجد خيارات',
                openText: 'فتح'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'إغلاق'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'التنقل عبر الصفحات',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'الانتقال إلى '} صفحة ${page}`;
                    }
                    if (type === 'first') {
                        return 'الانتقال إلى الصفحة الأولى';
                    }
                    if (type === 'last') {
                        return 'الانتقال الي الصفحة الأخيرة';
                    }
                    if (type === 'next') {
                        return 'الانتقال إلى الصفحة التالية';
                    }
                    // if (type === 'previous') {
                    return 'الانتقال إلى الصفحة السابقة';
                }
            }
        }
    }
};
const arSD = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'إظهار المسار'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'انتقل إلى الصفحة الأولى';
                    }
                    if (type === 'last') {
                        return 'انتقل إلى الصفحة الأخيرة';
                    }
                    if (type === 'next') {
                        return 'انتقل إلى الصفحة التالية';
                    }
                    // if (type === 'previous') {
                    return 'انتقل إلى الصفحة السابقة';
                },
                labelRowsPerPage: 'عدد الصفوف في الصفحة:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} من ${count !== -1 ? count : ` أكثر من${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ${value !== 1 ? 'نجوم' : 'نجمة'}`,
                emptyLabelText: 'فارغ'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'مسح',
                closeText: 'إغلاق',
                loadingText: 'جار التحميل...',
                noOptionsText: 'لا يوجد خيارات',
                openText: 'فتح'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'إغلاق'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'التنقل عبر الصفحات',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'انتقل إلى '} صفحة ${page}`;
                    }
                    if (type === 'first') {
                        return 'انتقل إلى الصفحة الأولى';
                    }
                    if (type === 'last') {
                        return 'انتقل الي الصفحة الأخيرة';
                    }
                    if (type === 'next') {
                        return 'انتقل إلى الصفحة التالية';
                    }
                    // if (type === 'previous') {
                    return 'انتقل إلى الصفحة السابقة';
                }
            }
        }
    }
};
const azAZ = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Yolu göstər'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Birinci səhifəyə keç';
                    }
                    if (type === 'last') {
                        return 'Sonuncu səhifəyə keç';
                    }
                    if (type === 'next') {
                        return 'Növbəti səhifəyə keç';
                    }
                    // if (type === 'previous') {
                    return 'Əvvəlki səhifəyə keç';
                },
                labelRowsPerPage: 'Səhifəyə düşən sətrlər:'
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    let pluralForm = 'Ulduz';
                    const lastDigit = value % 10;
                    if (lastDigit > 1 && lastDigit < 5) {
                        pluralForm = 'Ulduzlar';
                    }
                    return `${value} ${pluralForm}`;
                },
                emptyLabelText: 'Boş'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Silmək',
                closeText: 'Bağlamaq',
                loadingText: 'Yüklənir…',
                noOptionsText: 'Seçimlər mövcud deyil',
                openText: 'Открыть'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Bağlamaq'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Səhifənin naviqasiyası',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${page} ${selected ? 'səhifə' : 'səhifəyə keç'}`;
                    }
                    if (type === 'first') {
                        return 'Birinci səhifəyə keç';
                    }
                    if (type === 'last') {
                        return 'Sonuncu səhifəyə keç';
                    }
                    if (type === 'next') {
                        return 'Növbəti səhifəyə keç';
                    }
                    // if (type === 'previous') {
                    return 'Əvvəlki səhifəyə keç';
                }
            }
        }
    }
};
const bnBD = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'পথ দেখান'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'প্রথম পৃষ্ঠায় যান';
                    }
                    if (type === 'last') {
                        return 'শেষ পৃষ্ঠায় যান';
                    }
                    if (type === 'next') {
                        return 'পরবর্তী পৃষ্ঠায় যান';
                    }
                    // if (type === 'previous') {
                    return 'আগের পৃষ্ঠায় যান';
                },
                labelRowsPerPage: 'প্রতি পৃষ্ঠায় সারি:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} / ${count !== -1 ? count : `${to} থেকে বেশি`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} স্টার`,
                emptyLabelText: 'খালি'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'পরিষ্কার করুন',
                closeText: 'বন্ধ করুন',
                loadingText: 'লোড হচ্ছে…',
                noOptionsText: 'কোন অপশন নেই',
                openText: 'ওপেন করুন'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'বন্ধ করুন'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'পেজিনেশন নেভিগেশন',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'যান '}পৃষ্ঠা ${page}-এ`;
                    }
                    if (type === 'first') {
                        return 'প্রথম পৃষ্ঠায় যান';
                    }
                    if (type === 'last') {
                        return 'শেষ পৃষ্ঠায় যান';
                    }
                    if (type === 'next') {
                        return 'পরবর্তী পৃষ্ঠায় যান';
                    }
                    // if (type === 'previous') {
                    return 'আগের পৃষ্ঠায় যান';
                }
            }
        }
    }
};
const beBY = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Паказаць шлях'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Перайсці на першую старонку';
                    }
                    if (type === 'last') {
                        return 'Перайсці на апошнюю старонку';
                    }
                    if (type === 'next') {
                        return 'Перайсці на наступную старонку';
                    }
                    // if (type === 'previous') {
                    return 'Перайсці на папярэднюю старонку';
                },
                labelRowsPerPage: 'Радкоў на старонцы:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} з ${count !== -1 ? count : `больш чым ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    let pluralForm = 'Зорак';
                    const lastDigit = value % 10;
                    if (lastDigit > 1 && lastDigit < 5 && (value < 10 || value > 20)) {
                        pluralForm = 'Зоркі';
                    } else if (lastDigit === 1 && value % 100 !== 11) {
                        pluralForm = 'Зорка';
                    }
                    return `${value} ${pluralForm}`;
                },
                emptyLabelText: 'Рэйтынг адсутнічае'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Ачысціць',
                closeText: 'Закрыць',
                loadingText: 'Загрузка…',
                noOptionsText: 'Няма варыянтаў',
                openText: 'Адкрыць'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Закрыць'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Навігацыя па старонкам',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        if (selected) {
                            return `${page} старонка`;
                        }
                        return `Перайсці на ${page} старонку`;
                    }
                    if (type === 'first') {
                        return 'Перайсці на першую старонку';
                    }
                    if (type === 'last') {
                        return 'Перайсці на апошнюю старонку';
                    }
                    if (type === 'next') {
                        return 'Перайсці на наступную старонку';
                    }
                    // if (type === 'previous') {
                    return 'Перайсці на папярэднюю старонку';
                }
            }
        }
    }
};
const bgBG = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Показване на пътя'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Отиди на първата страница';
                    }
                    if (type === 'last') {
                        return 'Отиди на последната страница';
                    }
                    if (type === 'next') {
                        return 'Отиди на следващата страница';
                    }
                    // if (type === 'previous') {
                    return 'Отиди на предишната страница';
                },
                labelRowsPerPage: 'Редове на страница:'
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Звезд${value !== 1 ? 'и' : 'а'}`,
                emptyLabelText: 'Изчисти'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Изчисти',
                closeText: 'Затвори',
                loadingText: 'Зареждане…',
                noOptionsText: 'Няма налични опции',
                openText: 'Отвори'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Затвори'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Пагинация',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Към '}страница ${page}`;
                    }
                    if (type === 'first') {
                        return 'Отиди на първата страница';
                    }
                    if (type === 'last') {
                        return 'Отиди на последната страница';
                    }
                    if (type === 'next') {
                        return 'Отиди на следващата страница';
                    }
                    // if (type === 'previous') {
                    return 'Отиди на предишната страница';
                }
            }
        }
    }
};
const caES = {
    components: {
        // MuiBreadcrumbs: {
        //   defaultProps: {
        //    expandText: 'Show path',
        //   },
        // },
        MuiTablePagination: {
            defaultProps: {
                // getItemAriaLabel: (type) => {
                //   if (type === 'first') {
                //     return 'Go to first page';
                //   }
                //   if (type === 'last') {
                //     return 'Go to last page';
                //   }
                //   if (type === 'next') {
                //     return 'Go to next page';
                //   }
                //   // if (type === 'previous') {
                //   return 'Go to previous page';
                // },
                labelRowsPerPage: 'Files per pàgina:'
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ${value !== 1 ? 'Estrelles' : 'Estrella'}`,
                emptyLabelText: 'Buit'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Netejar',
                closeText: 'Tancar',
                loadingText: 'Carregant…',
                noOptionsText: 'Sense opcions',
                openText: 'Obert'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Tancat'
            }
        }
    }
};
const csCZ = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Ukázat cestu'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Jít na první stránku';
                    }
                    if (type === 'last') {
                        return 'Jít na poslední stránku';
                    }
                    if (type === 'next') {
                        return 'Jít na další stránku';
                    }
                    // if (type === 'previous') {
                    return 'Jít na předchozí stránku';
                },
                labelRowsPerPage: 'Řádků na stránce:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} z ${count !== -1 ? count : `více než ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    if (value === 1) {
                        return `${value} hvězdička`;
                    }
                    if (value >= 2 && value <= 4) {
                        return `${value} hvězdičky`;
                    }
                    return `${value} hvězdiček`;
                },
                emptyLabelText: 'Prázdné'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Vymazat',
                closeText: 'Zavřít',
                loadingText: 'Načítání…',
                noOptionsText: 'Žádné možnosti',
                openText: 'Otevřít'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Zavřít'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigace stránkováním',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Jít na '}${page}. stránku`;
                    }
                    if (type === 'first') {
                        return 'Jít na první stránku';
                    }
                    if (type === 'last') {
                        return 'Jít na poslední stránku';
                    }
                    if (type === 'next') {
                        return 'Jít na další stránku';
                    }
                    // if (type === 'previous') {
                    return 'Jít na předchozí stránku';
                }
            }
        }
    }
};
const daDK = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Vis sti'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Gå til den første side';
                    }
                    if (type === 'last') {
                        return 'Gå til den sidste side';
                    }
                    if (type === 'next') {
                        return 'Gå til den næste side';
                    }
                    // if (type === 'previous') {
                    return 'Gå til den forrige side';
                },
                labelRowsPerPage: 'Rækker pr side:',
                labelDisplayedRows: ({ from, to, count })=>`${from}-${to} af ${count !== -1 ? count : `mere end ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Stjern${value !== 1 ? 'er' : ''}`,
                emptyLabelText: 'Tom'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Slet',
                closeText: 'Luk',
                loadingText: 'Indlæser…',
                noOptionsText: 'Ingen muligheder',
                openText: 'Åben'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Luk'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Sideinddelings navigation',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Go to '}page ${page}`;
                    }
                    if (type === 'first') {
                        return 'Gå til den første side';
                    }
                    if (type === 'last') {
                        return 'Gå til den sidste side';
                    }
                    if (type === 'next') {
                        return 'Gå til den næste side';
                    }
                    // if (type === 'previous') {
                    return 'Gå til den forrige side';
                }
            }
        }
    }
};
const deDE = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Pfad anzeigen'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Zur ersten Seite';
                    }
                    if (type === 'last') {
                        return 'Zur letzten Seite';
                    }
                    if (type === 'next') {
                        return 'Zur nächsten Seite';
                    }
                    // if (type === 'previous') {
                    return 'Zur vorherigen Seite';
                },
                labelRowsPerPage: 'Zeilen pro Seite:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} von ${count !== -1 ? count : `mehr als ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ${value !== 1 ? 'Sterne' : 'Stern'}`,
                emptyLabelText: 'Keine Wertung'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Leeren',
                closeText: 'Schließen',
                loadingText: 'Wird geladen…',
                noOptionsText: 'Keine Optionen',
                openText: 'Öffnen'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Schließen'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigation via Seitennummerierung',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Gehe zu '}Seite ${page}`;
                    }
                    if (type === 'first') {
                        return 'Zur ersten Seite';
                    }
                    if (type === 'last') {
                        return 'Zur letzten Seite';
                    }
                    if (type === 'next') {
                        return 'Zur nächsten Seite';
                    }
                    // if (type === 'previous') {
                    return 'Zur vorherigen Seite';
                }
            }
        }
    }
};
const elGR = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Εμφάνιση διαδρομής'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Πρώτη σελίδα';
                    }
                    if (type === 'last') {
                        return 'Τελευταία σελίδα';
                    }
                    if (type === 'next') {
                        return 'Επόμενη σελίδα';
                    }
                    // if (type === "previous") {
                    return 'Προηγούμενη σελίδα';
                },
                labelRowsPerPage: 'Γραμμές ανα σελίδα:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} από ${count !== -1 ? count : `πάνω από ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Αστέρι${value !== 1 ? 'α' : ''}`,
                emptyLabelText: 'Χωρίς βαθμολόγηση'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Καθαρισμός',
                closeText: 'Κλείσιμο',
                loadingText: 'Φόρτωση…',
                noOptionsText: 'Δεν υπάρχουν επιλογές',
                openText: 'Άνοιγμα'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Κλείσιμο'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Πλοήγηση σε σελίδες',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Μετάβαση '}σελίδα ${page}`;
                    }
                    if (type === 'first') {
                        return 'Πρώτη σελίδα';
                    }
                    if (type === 'last') {
                        return 'Τελευταία σελίδα';
                    }
                    if (type === 'next') {
                        return 'Επόμενη σελίδα';
                    }
                    // if (type === "previous") {
                    return 'Προηγούμενη σελίδα';
                }
            }
        }
    }
};
const enUS = {
};
const esES = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Mostrar ruta'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Ir a la primera página';
                    }
                    if (type === 'last') {
                        return 'Ir a la última página';
                    }
                    if (type === 'next') {
                        return 'Ir a la página siguiente';
                    }
                    // if (type === 'previous') {
                    return 'Ir a la página anterior';
                },
                labelRowsPerPage: 'Filas por página:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} de ${count !== -1 ? count : `más de ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Estrella${value !== 1 ? 's' : ''}`,
                emptyLabelText: 'Vacío'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Limpiar',
                closeText: 'Cerrar',
                loadingText: 'Cargando…',
                noOptionsText: 'Sin opciones',
                openText: 'Abierto'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Cerrar'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Paginador',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Ir a la '}página ${page}`;
                    }
                    if (type === 'first') {
                        return 'Ir a la primera página';
                    }
                    if (type === 'last') {
                        return 'Ir a la última página';
                    }
                    if (type === 'next') {
                        return 'Ir a la página siguiente';
                    }
                    // if (type === 'previous') {
                    return 'Ir a la página anterior';
                }
            }
        }
    }
};
const etEE = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Näita teed'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Vali esimene lehekülg';
                    }
                    if (type === 'last') {
                        return 'Vali viimane lehekülg';
                    }
                    if (type === 'next') {
                        return 'Vali järgmine lehekülg';
                    }
                    // if (type === 'previous') {
                    return 'Vali eelmine lehekülg';
                },
                labelRowsPerPage: 'Ridu leheküljel:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} / ${count !== -1 ? count : `rohkem kui ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Tärn${value !== 1 ? 'i' : ''}`,
                emptyLabelText: 'Tühi'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Tühjenda',
                closeText: 'Sulge',
                loadingText: 'Laen…',
                noOptionsText: 'Valikuid ei ole',
                openText: 'Ava'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Sulge'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Lehekülgede valik',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Vali '}lehekülg ${page}`;
                    }
                    if (type === 'first') {
                        return 'Vali esimene lehekülg';
                    }
                    if (type === 'last') {
                        return 'Vali viimane lehekülg';
                    }
                    if (type === 'next') {
                        return 'Vali järgmine lehekülg';
                    }
                    // if (type === 'previous') {
                    return 'Vali eelmine lehekülg';
                }
            }
        }
    }
};
const faIR = {
    components: {
        // MuiBreadcrumbs: {
        //   defaultProps: {
        //     expandText: 'Show path',
        //   },
        // },
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'نمایش مسیر'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'رفتن به اولین صفحه';
                    }
                    if (type === 'last') {
                        return 'رفتن به آخرین صفحه';
                    }
                    if (type === 'next') {
                        return 'رفتن به صفحه‌ی بعدی';
                    }
                    // if (type === 'previous') {
                    return 'رفتن به صفحه‌ی قبلی';
                },
                labelRowsPerPage: 'تعداد سطرهای هر صفحه:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} از ${count !== -1 ? count : `بیشتر از ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ستاره`,
                emptyLabelText: 'خالی'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'پاک‌کردن',
                closeText: 'بستن',
                loadingText: 'در حال بارگذاری…',
                noOptionsText: 'بی‌نتیجه',
                openText: 'بازکردن'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'بستن'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'ناوبری صفحه',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'رفتن به '}صفحهٔ ${page}`;
                    }
                    if (type === 'first') {
                        return 'رفتن به اولین صفحه';
                    }
                    if (type === 'last') {
                        return 'رفتن به آخرین صفحه';
                    }
                    if (type === 'next') {
                        return 'رفتن به صفحه‌ی بعدی';
                    }
                    // if (type === 'previous') {
                    return 'رفتن به صفحه‌ی قبلی';
                }
            }
        }
    }
};
const fiFI = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Näytä reitti'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Mene ensimmäiselle sivulle';
                    }
                    if (type === 'last') {
                        return 'Mene viimeiselle sivulle';
                    }
                    if (type === 'next') {
                        return 'Mene seuraavalle sivulle';
                    }
                    // if (type === 'previous') {
                    return 'Mene edelliselle sivulle';
                },
                labelRowsPerPage: 'Rivejä per sivu:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} / ${count !== -1 ? count : `enemmän kuin ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Täht${value !== 1 ? 'eä' : 'i'}`,
                emptyLabelText: 'Tyhjä'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Tyhjennä',
                closeText: 'Sulje',
                loadingText: 'Ladataan…',
                noOptionsText: 'Ei valintoja',
                openText: 'Avaa'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Sulje'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Sivutus navigaatio',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? 'sivu' : 'Mene sivulle'} ${page}`;
                    }
                    if (type === 'first') {
                        return 'Mene ensimmäiselle sivulle';
                    }
                    if (type === 'last') {
                        return 'Mene viimeiselle sivulle';
                    }
                    if (type === 'next') {
                        return 'Mene seuraavalle sivulle';
                    }
                    // if (type === 'previous') {
                    return 'Mene edelliselle sivulle';
                }
            }
        }
    }
};
const frFR = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Montrer le chemin'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Aller à la première page';
                    }
                    if (type === 'last') {
                        return 'Aller à la dernière page';
                    }
                    if (type === 'next') {
                        return 'Aller à la page suivante';
                    }
                    // if (type === 'previous') {
                    return 'Aller à la page précédente';
                },
                labelRowsPerPage: 'Lignes par page :',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} sur ${count !== -1 ? count : `plus que ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Etoile${value !== 1 ? 's' : ''}`,
                emptyLabelText: 'Vide'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Vider',
                closeText: 'Fermer',
                loadingText: 'Chargement…',
                noOptionsText: 'Pas de résultats',
                openText: 'Ouvrir'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Fermer'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'navigation de pagination',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Aller à la '}page ${page}`;
                    }
                    if (type === 'first') {
                        return 'Aller à la première page';
                    }
                    if (type === 'last') {
                        return 'Aller à la dernière page';
                    }
                    if (type === 'next') {
                        return 'Aller à la page suivante';
                    }
                    // if (type === 'previous') {
                    return 'Aller à la page précédente';
                }
            }
        }
    }
};
const heIL = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'הצג נתיב'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'לעמוד הראשון';
                    }
                    if (type === 'last') {
                        return 'לעמוד האחרון';
                    }
                    if (type === 'next') {
                        return 'לעמוד הבא';
                    }
                    // if (type === 'previous') {
                    return 'לעמוד הקודם';
                },
                labelRowsPerPage: 'שורות בעמוד:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} מתוך ${count !== -1 ? count : `יותר מ ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} כוכב${value !== 1 ? 'ים' : ''}`,
                emptyLabelText: 'ריק'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'נקה',
                closeText: 'סגור',
                loadingText: 'טוען…',
                noOptionsText: 'אין אופציות',
                openText: 'פתח'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'סגור'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'ניווט בעמודים',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'ל '}עמוד ${page}`;
                    }
                    if (type === 'first') {
                        return 'לעמוד הראשון';
                    }
                    if (type === 'last') {
                        return 'לעמוד האחרון';
                    }
                    if (type === 'next') {
                        return 'לעמוד הבא';
                    }
                    // if (type === 'previous') {
                    return 'לעמוד הקודם';
                }
            }
        }
    }
};
const hiIN = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'रास्ता दिखायें'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'पहले पृष्ठ पर जाएँ';
                    }
                    if (type === 'last') {
                        return 'अंतिम पृष्ठ पर जाएँ';
                    }
                    if (type === 'next') {
                        return 'अगले पृष्ठ पर जाएँ';
                    }
                    // if (type === 'previous') {
                    return 'पिछले पृष्ठ पर जाएँ';
                },
                labelRowsPerPage: 'पंक्तियाँ प्रति पृष्ठ:',
                labelDisplayedRows: ({ from, to, count })=>`${from}-${to === -1 ? count : to} कुल ${count} में`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} तार${value !== 1 ? 'े' : 'ा'}`,
                emptyLabelText: 'रिक्त'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'हटायें',
                closeText: 'बंद करें',
                loadingText: 'लोड हो रहा है…',
                noOptionsText: 'कोई विकल्प नहीं',
                openText: 'खोलें'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'बंद करें'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'पृस्ठानुसार संचालन',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `पृष्ठ ${page} ${selected ? '' : ' पर जाएँ'}`;
                    }
                    if (type === 'first') {
                        return 'पहले पृष्ठ पर जाएँ';
                    }
                    if (type === 'last') {
                        return 'अंतिम पृष्ठ पर जाएँ';
                    }
                    if (type === 'next') {
                        return 'अगले पृष्ठ पर जाएँ';
                    }
                    // if (type === 'previous') {
                    return 'पिछले पृष्ठ पर जाएँ';
                }
            }
        }
    }
};
const hrHR = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Pokaži putanju'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Idi na prvu stranicu';
                    }
                    if (type === 'last') {
                        return 'Idi na posljednju stranicu';
                    }
                    if (type === 'next') {
                        return 'Idi na sljedeću stranicu';
                    }
                    // if (type === 'previous') {
                    return 'Idi na prethodnu stranicu';
                },
                labelRowsPerPage: 'Redova po stranici:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    const lastDigit = value % 10;
                    const lastTwoDigits = value % 100;
                    if ([
                        2,
                        3,
                        4
                    ].includes(lastDigit) && ![
                        12,
                        13,
                        14
                    ].includes(lastTwoDigits)) {
                        return 'Zvijezde';
                    }
                    return 'Zvijezda';
                },
                emptyLabelText: 'Prazno'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Briši',
                closeText: 'Zatvori',
                loadingText: 'Učitavanje…',
                noOptionsText: 'Nema opcija',
                openText: 'Otvori'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Zatvori'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigacija po stranicama',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Idi na '}stranicu ${page}`;
                    }
                    if (type === 'first') {
                        return 'Idi na prvu stranicu';
                    }
                    if (type === 'last') {
                        return 'Idi na zadnju stranicu';
                    }
                    if (type === 'next') {
                        return 'Idi na sljedeću stranicu';
                    }
                    // if (type === 'previous') {
                    return 'Idi na prethodnu stranicu';
                }
            }
        }
    }
};
const huHU = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Útvonal'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Első oldalra';
                    }
                    if (type === 'last') {
                        return 'Utolsó oldalra';
                    }
                    if (type === 'next') {
                        return 'Következő oldalra';
                    }
                    // if (type === 'previous') {
                    return 'Előző oldalra';
                },
                labelRowsPerPage: 'Sorok száma:'
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Csillag`,
                emptyLabelText: 'Üres'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Törlés',
                closeText: 'Bezárás',
                loadingText: 'Töltés…',
                noOptionsText: 'Nincs találat',
                openText: 'Megnyitás'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Bezárás'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Lapozás',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${page}. oldal${selected ? '' : 'ra'}`;
                    }
                    if (type === 'first') {
                        return 'Első oldalra';
                    }
                    if (type === 'last') {
                        return 'Utolsó oldalra';
                    }
                    if (type === 'next') {
                        return 'Következő oldalra';
                    }
                    // if (type === 'previous') {
                    return 'Előző oldalra';
                }
            }
        }
    }
};
const hyAM = {
    components: {
        // MuiBreadcrumbs: {
        //   defaultProps: {
        //     expandText: 'Show path',
        //   },
        // },
        MuiTablePagination: {
            defaultProps: {
                // getItemAriaLabel: (type) => {
                //   if (type === 'first') {
                //     return 'Go to first page';
                //   }
                //   if (type === 'last') {
                //     return 'Go to last page';
                //   }
                //   if (type === 'next') {
                //     return 'Go to next page';
                //   }
                //   // if (type === 'previous') {
                //   return 'Go to previous page';
                // },
                labelRowsPerPage: 'Տողեր մեկ էջում`'
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Աստղ`,
                emptyLabelText: 'Դատարկ'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Մաքրել',
                closeText: 'Փակել',
                loadingText: 'Բեռնում…',
                noOptionsText: 'Տարբերակներ չկան',
                openText: 'Բացել'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Փակել'
            }
        }
    }
};
const idID = {
    components: {
        // MuiBreadcrumbs: {
        //   defaultProps: {
        //     expandText: 'Show path',
        //   },
        // },
        MuiTablePagination: {
            defaultProps: {
                // getItemAriaLabel: (type) => {
                //   if (type === 'first') {
                //     return 'Go to first page';
                //   }
                //   if (type === 'last') {
                //     return 'Go to last page';
                //   }
                //   if (type === 'next') {
                //     return 'Go to next page';
                //   }
                //   // if (type === 'previous') {
                //   return 'Go to previous page';
                // },
                labelRowsPerPage: 'Baris per halaman:'
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Bintang`
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Hapus',
                closeText: 'Tutup',
                loadingText: 'Memuat…',
                noOptionsText: 'Tidak ada opsi',
                openText: 'Buka'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Tutup'
            }
        }
    }
};
const isIS = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Sýna slóð'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Fara á fyrstu síðu';
                    }
                    if (type === 'last') {
                        return 'Fara á síðustu síðu';
                    }
                    if (type === 'next') {
                        return 'Fara á næstu síðu';
                    }
                    // if (type === 'previous') {
                    return 'Fara á fyrri síðu';
                },
                labelRowsPerPage: 'Raðir á síðu:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} af ${count !== -1 ? count : `fleiri en ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ${value === 1 ? 'stjarna' : 'stjörnur'}`,
                emptyLabelText: 'Tómt'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Hreinsa',
                closeText: 'Loka',
                loadingText: 'Hlaða…',
                noOptionsText: 'Engar niðurstöður',
                openText: 'Opna'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Loka'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Síðuflakk',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? 'Síða' : 'Fara á síðu'} ${page}`;
                    }
                    if (type === 'first') {
                        return 'Fara á fyrstu síðu';
                    }
                    if (type === 'last') {
                        return 'Fara á síðustu síðu';
                    }
                    if (type === 'next') {
                        return 'Fara á næstu síðu';
                    }
                    // if (type === 'previous') {
                    return 'Fara á fyrri síðu';
                }
            }
        }
    }
};
const itIT = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Visualizza percorso'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Vai alla prima pagina';
                    }
                    if (type === 'last') {
                        return "Vai all'ultima pagina";
                    }
                    if (type === 'next') {
                        return 'Vai alla pagina successiva';
                    }
                    // if (type === 'previous') {
                    return 'Vai alla pagina precedente';
                },
                labelRowsPerPage: 'Righe per pagina:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} di ${count !== -1 ? count : `più di ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Stell${value !== 1 ? 'e' : 'a'}`,
                emptyLabelText: 'Vuoto'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Svuota',
                closeText: 'Chiudi',
                loadingText: 'Caricamento in corso…',
                noOptionsText: 'Nessuna opzione',
                openText: 'Apri'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Chiudi'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigazione impaginata',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Vai alla '}pagina ${page}`;
                    }
                    if (type === 'first') {
                        return 'Vai alla prima pagina';
                    }
                    if (type === 'last') {
                        return "Vai all'ultima pagina";
                    }
                    if (type === 'next') {
                        return 'Vai alla pagina successiva';
                    }
                    // if (type === 'previous') {
                    return 'Vai alla pagina precedente';
                }
            }
        }
    }
};
const jaJP = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'すべて表示'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return '最初のページへ';
                    }
                    if (type === 'last') {
                        return '最後のページへ';
                    }
                    if (type === 'next') {
                        return '次のページへ';
                    }
                    // if (type === 'previous') {
                    return '前のページへ';
                },
                labelRowsPerPage: 'ページあたりの行数:',
                labelDisplayedRows: ({ from, to, count })=>`${from}～${to} / ${count !== -1 ? count : `${to}以上`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`星${value}`,
                emptyLabelText: '星なし'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'クリア',
                closeText: '閉じる',
                loadingText: '読み込み中…',
                noOptionsText: 'データがありません',
                openText: '開く'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: '閉じる'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'ページ選択',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `ページ${page}${selected ? '' : 'へ'}`;
                    }
                    if (type === 'first') {
                        return '最初のページへ';
                    }
                    if (type === 'last') {
                        return '最後のページへ';
                    }
                    if (type === 'next') {
                        return '次のページへ';
                    }
                    // if (type === 'previous') {
                    return '前のページへ';
                }
            }
        }
    }
};
const khKH = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'បង្ហាញផ្លូវ'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'ទៅទំព័រដំបូង';
                    }
                    if (type === 'last') {
                        return 'ទៅទំព័រចុងក្រោយ';
                    }
                    if (type === 'next') {
                        return 'ទៅទំព័របន្ទាប់';
                    }
                    // if (type === 'previous') {
                    return 'ទៅទំព័រមុន';
                },
                labelRowsPerPage: 'ចំនួនជួរដេកក្នុងមួយទំព័រ:',
                labelDisplayedRows: ({ from, to, count })=>`${from} - ${to} នៃ ${count !== -1 ? count : `ច្រើនជាង ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ផ្កាយ${value !== 1 ? '' : ''}`,
                emptyLabelText: 'ទទេ'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'លុបចោល',
                closeText: 'បិទ',
                loadingText: 'កំពុងលោត…',
                noOptionsText: 'គ្មានជម្រើស',
                openText: 'បើក'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'បិទ'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'រុករកទំព័រ',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'ទៅ '}ទំព័រ ${page}`;
                    }
                    if (type === 'first') {
                        return 'ទៅទំព័រដំបូង';
                    }
                    if (type === 'last') {
                        return 'ទៅទំព័រចុងក្រោយ';
                    }
                    if (type === 'next') {
                        return 'ទៅទំព័របន្ទាប់';
                    }
                    // if (type === 'previous') {
                    return 'ទៅទំព័រមុន';
                }
            }
        }
    }
};
const koKR = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: '경로 보기'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return '첫 번째 페이지로 이동';
                    }
                    if (type === 'last') {
                        return '마지막 페이지로 이동';
                    }
                    if (type === 'next') {
                        return '다음 페이지로 이동';
                    }
                    // if (type === 'previous') {
                    return '이전 페이지로 이동';
                },
                labelRowsPerPage: '페이지 당 행:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} / ${count !== -1 ? count : `${to}개 이상`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} 점`,
                emptyLabelText: '빈 텍스트'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: '지우기',
                closeText: '닫기',
                loadingText: '불러오는 중…',
                noOptionsText: '옵션 없음',
                openText: '열기'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: '닫기'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': '페이지네이션 네비게이션',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${page} 번째 페이지${selected ? '' : '로 이동'}`;
                    }
                    if (type === 'first') {
                        return '첫 번째 페이지로 이동';
                    }
                    if (type === 'last') {
                        return '마지막 페이지로 이동';
                    }
                    if (type === 'next') {
                        return '다음 페이지로 이동';
                    }
                    // if (type === 'previous') {
                    return '이전 페이지로 이동';
                }
            }
        }
    }
};
const kuCKB = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'ڕێچکە پیشان بدە'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'چوونە یەکەم پەڕە';
                    }
                    if (type === 'last') {
                        return 'چوونە کۆتا پەڕە';
                    }
                    if (type === 'next') {
                        return 'چوونە پەڕەی دواتر';
                    }
                    // if (type === 'previous') {
                    return 'گەڕانەوە بۆ پەڕەی پێشوو';
                },
                labelRowsPerPage: 'ژمارەی ڕیزەکان لە هەر پەڕەیەک:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} لە ${count !== -1 ? count : ` زیاترە لە${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ${value !== 1 ? 'ئەستێرەکان' : 'ئەستێرە'}`,
                emptyLabelText: 'خاڵیە'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'سڕینەوە',
                closeText: 'داخستن',
                loadingText: 'لە بارکردندایە...',
                noOptionsText: 'هیچ بژاردەیەک نیە',
                openText: 'کردنەوە'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'داخستن'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'گەڕان لە پەڕەکان',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'چوون بۆ '} پەڕەی ${page}`;
                    }
                    if (type === 'first') {
                        return 'چوونە یەکەم پەڕە';
                    }
                    if (type === 'last') {
                        return 'چوونە کۆتا پەڕە';
                    }
                    if (type === 'next') {
                        return 'چوونە پەڕەی دواتر';
                    }
                    // if (type === 'previous') {
                    return 'گەڕانەوە بۆ پەڕەی پێشوو';
                }
            }
        }
    }
};
const kuLatn = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Rê nîşan bide'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Biçe rûpela yekem';
                    }
                    if (type === 'last') {
                        return 'Biçe rûpela dawî';
                    }
                    if (type === 'next') {
                        return 'Biçe rûpela din';
                    }
                    // if (type === 'previous') {
                    return 'Biçe rûpela berê';
                },
                labelRowsPerPage: 'Rêz li ser rûpelê:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} of ${count !== -1 ? count : `zêdetir ji ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Stêrk`,
                emptyLabelText: 'Vala'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Paqij bike',
                closeText: 'Bigre',
                loadingText: 'Tê barkirin…',
                noOptionsText: 'Vebijêrk tune',
                openText: 'Veke'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Bigre'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navîgasyona rûpelan',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Biçe '}rûpel ${page}`;
                    }
                    if (type === 'first') {
                        return 'Biçe rûpela yekem';
                    }
                    if (type === 'last') {
                        return 'Biçe rûpela dawî';
                    }
                    if (type === 'next') {
                        return 'Biçe rûpela din';
                    }
                    // if (type === 'previous') {
                    return 'Biçe rûpela berê';
                }
            }
        }
    }
};
const kkKZ = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Толық жолды көрсету'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Бірінші бетке өту';
                    }
                    if (type === 'last') {
                        return 'Соңғы бетке өту';
                    }
                    if (type === 'next') {
                        return 'Келесі бетке өту';
                    }
                    // if (type === 'previous') {
                    return 'Алдыңғы бетке өту';
                },
                labelRowsPerPage: 'Беттегі қатарлар:',
                labelDisplayedRows: ({ from, to, count })=>`${count !== -1 ? count : `+${to}`} қатардың ішінен ${from}–${to}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} жұлдыз`,
                emptyLabelText: 'Рейтинг жоқ'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Тазарту',
                closeText: 'Жабу',
                loadingText: 'Жүктелуде…',
                noOptionsText: 'Қол жетімді нұсқалар жоқ',
                openText: 'Ашу'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Жабу'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Беттерді шарлау',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        if (selected) {
                            return `${page} — бет`;
                        }
                        return `${page} — бетке өту`;
                    }
                    if (type === 'first') {
                        return 'Бірінші бетке өту';
                    }
                    if (type === 'last') {
                        return 'Соңғы бетке өту';
                    }
                    if (type === 'next') {
                        return 'Келесі бетке өту';
                    }
                    // if (type === 'previous') {
                    return 'Алдыңғы бетке өту';
                }
            }
        }
    }
};
const mkMK = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Прикажи патека'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Оди на прва страница';
                    }
                    if (type === 'last') {
                        return 'Оди на последна страница';
                    }
                    if (type === 'next') {
                        return 'Оди на следна страница';
                    }
                    // if (type === 'previous') {
                    return 'Оди на предходна страница';
                },
                labelRowsPerPage: 'Редови по страница:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} од ${count !== -1 ? count : `повеќе од ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    const lastDigit = value % 10;
                    return `${value} Ѕвезд${lastDigit === 1 ? 'а' : 'и'}`;
                },
                emptyLabelText: 'Празно'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Избриши',
                closeText: 'Затвори',
                loadingText: 'Се презема',
                noOptionsText: 'Нема опција',
                openText: 'Отвори'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Затвори'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Навигација низ страници',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Оди на '}страница ${page}`;
                    }
                    if (type === 'first') {
                        return 'Оди на прва страница';
                    }
                    if (type === 'last') {
                        return 'Оди на последна страница';
                    }
                    if (type === 'next') {
                        return 'Оди на следна страница';
                    }
                    // if (type === 'previous') {
                    return 'Оди на предходна страница';
                }
            }
        }
    }
};
const myMY = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'လမ်းကြောင်းပြပါ။'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'ပထမစာမျက်နှာသို့သွားပါ။';
                    }
                    if (type === 'last') {
                        return 'နောက်ဆုံးစာမျက်နှာသို့သွားပါ။';
                    }
                    if (type === 'next') {
                        return 'နောက်စာမျက်နှာသို့သွားပါ။';
                    }
                    // if (type === 'previous') {
                    return 'ယခင်စာမျက်နှာသို့သွားပါ။';
                },
                labelRowsPerPage: 'စာမျက်နှာအလိုက် အတန်းများ:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} ၏ ${count !== -1 ? count : `ထက်ပိုပြီး ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    const lastDigit = value % 10;
                    return `${value} ကြယ်ပွင့်${lastDigit === 1 ? '၎' : ''}`;
                },
                emptyLabelText: 'ဗလာ'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'ရှင်းလင်းသော',
                closeText: 'ပိတ်လိုက်',
                loadingText: 'ဖွင့်နေသည်…',
                noOptionsText: 'ရွေးချယ်ခွင့်မရှိပါ။',
                openText: 'ဖွင့်သည်။'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'ပိတ်လိုက်'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Pagination အညွှန်း',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'သွားပါ။ '}စာမျက်နှာ ${page}`;
                    }
                    if (type === 'first') {
                        return 'ပထမစာမျက်နှာသို့သွားပါ။';
                    }
                    if (type === 'last') {
                        return 'နောက်ဆုံးစာမျက်နှာသို့သွားပါ။';
                    }
                    if (type === 'next') {
                        return 'နောက်စာမျက်နှာသို့သွားပါ။';
                    }
                    // if (type === 'previous') {
                    return 'ယခင်စာမျက်နှာသို့သွားပါ။';
                }
            }
        }
    }
};
const msMS = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Tunjukkan laluan'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Pergi ke halaman pertama';
                    }
                    if (type === 'last') {
                        return 'Pergi ke halaman terakhir';
                    }
                    if (type === 'next') {
                        return 'Pergi ke halaman seterusnya';
                    }
                    // if (type === 'previous') {
                    return 'Pergi ke halaman sebelumnya';
                },
                labelRowsPerPage: 'Baris setiap halaman:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} daripada ${count !== -1 ? count : `lebih daripada ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    const lastDigit = value % 10;
                    return `${value} Bintang${lastDigit === 1 ? 's' : ''}`;
                },
                emptyLabelText: 'kosong'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Jelas',
                closeText: 'tutup',
                loadingText: 'Memuatkan…',
                noOptionsText: 'Tiada pilihan',
                openText: 'Buka'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'tutup'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigasi penomboran',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Pergi ke '}muka surat ${page}`;
                    }
                    if (type === 'first') {
                        return 'Pergi ke halaman pertama';
                    }
                    if (type === 'last') {
                        return 'Pergi ke halaman terakhir';
                    }
                    if (type === 'next') {
                        return 'Pergi ke halaman seterusnya';
                    }
                    // if (type === 'previous') {
                    return 'Pergi ke halaman sebelumnya';
                }
            }
        }
    }
};
const neNP = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'बाटो देखाउनुहोस्'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'पहिलो पृष्ठमा जानुहोस्';
                    }
                    if (type === 'last') {
                        return 'अन्तिम पृष्ठमा जानुहोस्';
                    }
                    if (type === 'next') {
                        return 'अर्को पृष्ठमा जानुहोस्';
                    }
                    // if (type === 'previous') {
                    return 'अघिल्लो पृष्ठमा जानुहोस्';
                },
                labelRowsPerPage: 'प्रति पृष्ठ पङ्क्तिहरू:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} को ${count !== -1 ? count : `धेरै ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    const lastDigit = value % 10;
                    return `${value} तारा${lastDigit === 1 ? 'स' : ''}`;
                },
                emptyLabelText: 'खाली'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'खाली गर्नुहोस्',
                closeText: 'बन्द गर्नुहोस्',
                loadingText: 'लोड हुँदै...',
                noOptionsText: 'कुनै विकल्प छैन',
                openText: 'खोल्नुहोस्'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'बन्द गर्नुहोस्'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'पृष्ठांकन नेभिगेसन',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'जाऊ त्यहाँ '}पृष्ठ ${page}`;
                    }
                    if (type === 'first') {
                        return 'पहिलो पृष्ठमा जानुहोस्';
                    }
                    if (type === 'last') {
                        return 'अन्तिम पृष्ठमा जानुहोस्';
                    }
                    if (type === 'next') {
                        return 'अर्को पृष्ठमा जानुहोस्';
                    }
                    // if (type === 'previous') {
                    return 'अघिल्लो पृष्ठमा जानुहोस्';
                }
            }
        }
    }
};
const nbNO = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Vis sti'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Gå til første side';
                    }
                    if (type === 'last') {
                        return 'Gå til siste side';
                    }
                    if (type === 'next') {
                        return 'Gå til neste side';
                    }
                    // if (type === 'previous') {
                    return 'Gå til forrige side';
                },
                labelRowsPerPage: 'Rader per side:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} av ${count !== -1 ? count : `mer enn ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Stjerne${value !== 1 ? 'r' : ''}`,
                emptyLabelText: 'Tom'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Tøm',
                closeText: 'Lukk',
                loadingText: 'Laster inn…',
                noOptionsText: 'Ingen alternativer',
                openText: 'Åpne'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Lukk'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Paginering navigasjon',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Gå til '}side ${page}`;
                    }
                    if (type === 'first') {
                        return 'Gå til første side';
                    }
                    if (type === 'last') {
                        return 'Gå til siste side';
                    }
                    if (type === 'next') {
                        return 'Gå til neste side';
                    }
                    // if (type === 'previous') {
                    return 'Gå til forrige side';
                }
            }
        }
    }
};
const nnNO = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Vis sti'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Gå til første side';
                    }
                    if (type === 'last') {
                        return 'Gå til siste side';
                    }
                    if (type === 'next') {
                        return 'Gå til neste side';
                    }
                    // if (type === 'previous') {
                    return 'Gå til førre side';
                },
                labelRowsPerPage: 'Rader per side:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} av ${count !== -1 ? count : `fleire enn ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} stjerne${value !== 1 ? 'r' : ''}`,
                emptyLabelText: 'Tom'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Tøm',
                closeText: 'Lukk',
                loadingText: 'Lastar inn…',
                noOptionsText: 'Ingen alternativ',
                openText: 'Opna'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Lukk'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigasjon for paginering',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Gå til '}side ${page}`;
                    }
                    if (type === 'first') {
                        return 'Gå til første side';
                    }
                    if (type === 'last') {
                        return 'Gå til siste side';
                    }
                    if (type === 'next') {
                        return 'Gå til neste side';
                    }
                    // if (type === 'previous') {
                    return 'Gå til førre side';
                }
            }
        }
    }
};
const nlNL = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Pad tonen'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Ga naar eerste pagina';
                    }
                    if (type === 'last') {
                        return 'Ga naar laatste pagina';
                    }
                    if (type === 'next') {
                        return 'Ga naar volgende pagina';
                    }
                    // if (type === 'previous') {
                    return 'Ga naar vorige pagina';
                },
                labelRowsPerPage: 'Regels per pagina:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} van ${count !== -1 ? count : `meer dan ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Ster${value !== 1 ? 'ren' : ''}`,
                emptyLabelText: 'Leeg'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Wissen',
                closeText: 'Sluiten',
                loadingText: 'Laden…',
                noOptionsText: 'Geen opties',
                openText: 'Openen'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Sluiten'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigatie via paginering',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Ga naar '}pagina ${page}`;
                    }
                    if (type === 'first') {
                        return 'Ga naar eerste pagina';
                    }
                    if (type === 'last') {
                        return 'Ga naar laatste pagina';
                    }
                    if (type === 'next') {
                        return 'Ga naar volgende pagina';
                    }
                    // if (type === 'previous') {
                    return 'Ga naar vorige pagina';
                }
            }
        }
    }
};
const plPL = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Pokaż ścieżkę'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Przejdź do pierwszej strony';
                    }
                    if (type === 'last') {
                        return 'Przejdź do ostatniej strony';
                    }
                    if (type === 'next') {
                        return 'Przejdź do następnej strony';
                    }
                    // if (type === 'previous') {
                    return 'Przejdź do poprzedniej strony';
                },
                labelRowsPerPage: 'Wierszy na stronę:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} z ${count !== -1 ? count : `ponad ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    let pluralForm = 'gwiazdek';
                    const lastDigit = value % 10;
                    if ((value < 10 || value > 20) && lastDigit > 1 && lastDigit < 5) {
                        pluralForm = 'gwiazdki';
                    } else if (value === 1) {
                        pluralForm = 'gwiazdka';
                    }
                    return `${value} ${pluralForm}`;
                },
                emptyLabelText: 'Brak gwiazdek'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Wyczyść',
                closeText: 'Zamknij',
                loadingText: 'Ładowanie…',
                noOptionsText: 'Brak opcji',
                openText: 'Otwórz'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Zamknij'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Nawigacja podziału na strony',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return selected ? `${page}. strona` : `Przejdź do ${page}. strony`;
                    }
                    if (type === 'first') {
                        return 'Przejdź do pierwszej strony';
                    }
                    if (type === 'last') {
                        return 'Przejdź do ostatniej strony';
                    }
                    if (type === 'next') {
                        return 'Przejdź do następnej strony';
                    }
                    // if (type === 'previous') {
                    return 'Przejdź do poprzedniej strony';
                }
            }
        }
    }
};
const ptBR = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Mostrar caminho'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Ir para a primeira página';
                    }
                    if (type === 'last') {
                        return 'Ir para a última página';
                    }
                    if (type === 'next') {
                        return 'Ir para a próxima página';
                    }
                    // if (type === 'previous') {
                    return 'Ir para a página anterior';
                },
                labelRowsPerPage: 'Linhas por página:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Estrela${value !== 1 ? 's' : ''}`,
                emptyLabelText: 'Vazio'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Limpar',
                closeText: 'Fechar',
                loadingText: 'Carregando…',
                noOptionsText: 'Sem opções',
                openText: 'Abrir'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Fechar'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navegar pela paginação',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Ir para a '}página ${page}`;
                    }
                    if (type === 'first') {
                        return 'Ir para a primeira página';
                    }
                    if (type === 'last') {
                        return 'Ir para a última página';
                    }
                    if (type === 'next') {
                        return 'Ir para a próxima página';
                    }
                    // if (type === 'previous') {
                    return 'Ir para a página anterior';
                }
            }
        }
    }
};
const ptPT = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Mostrar caminho'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Primeira página';
                    }
                    if (type === 'last') {
                        return 'Última página';
                    }
                    if (type === 'next') {
                        return 'Próxima página';
                    }
                    // if (type === 'previous') {
                    return 'Página anterior';
                },
                labelRowsPerPage: 'Linhas por página:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} de ${count !== -1 ? count : `mais de ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Estrela${value !== 1 ? 's' : ''}`,
                emptyLabelText: 'Vazio'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Limpar',
                closeText: 'Fechar',
                loadingText: 'A carregar…',
                noOptionsText: 'Sem opções',
                openText: 'Abrir'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Fechar'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navegar por páginas',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Ir para a '}página ${page}`;
                    }
                    if (type === 'first') {
                        return 'Primeira página';
                    }
                    if (type === 'last') {
                        return 'Última página';
                    }
                    if (type === 'next') {
                        return 'Próxima página';
                    }
                    // if (type === 'previous') {
                    return 'Página anterior';
                }
            }
        }
    }
};
const roRO = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Arată calea'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Mergi la prima pagină';
                    }
                    if (type === 'last') {
                        return 'Mergi la ultima pagină';
                    }
                    if (type === 'next') {
                        return 'Mergi la pagina următoare';
                    }
                    // if (type === 'previous') {
                    return 'Mergi la pagina precedentă';
                },
                labelRowsPerPage: 'Rânduri pe pagină:'
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} St${value !== 1 ? 'ele' : 'ea'}`,
                emptyLabelText: 'Gol'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Șterge',
                closeText: 'Închide',
                loadingText: 'Se încarcă…',
                noOptionsText: 'Nicio opțiune',
                openText: 'Deschide'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Închide'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigare prin paginare',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Mergi la '}pagina ${page}`;
                    }
                    if (type === 'first') {
                        return 'Mergi la prima pagină';
                    }
                    if (type === 'last') {
                        return 'Mergi la ultima pagină';
                    }
                    if (type === 'next') {
                        return 'Mergi la pagina următoare';
                    }
                    // if (type === 'previous') {
                    return 'Mergi la pagina precedentă';
                }
            }
        }
    }
};
const srRS = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Pokaži putanju'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Idi na prvu stranicu';
                    }
                    if (type === 'last') {
                        return 'Idi na poslednju stranicu';
                    }
                    if (type === 'next') {
                        return 'Idi na sledeću stranicu';
                    }
                    // if (type === 'previous') {
                    return 'Idi na prethodnu stranicu';
                },
                labelRowsPerPage: 'Redova po stranici:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} od ${count !== -1 ? count : `više nego ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    const lastDigit = value % 10;
                    const lastTwoDigits = value % 100;
                    if ([
                        2,
                        3,
                        4
                    ].includes(lastDigit) && ![
                        12,
                        13,
                        14
                    ].includes(lastTwoDigits)) {
                        return 'Zvezde';
                    }
                    return 'Zvezda';
                },
                emptyLabelText: 'Prazno'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Briši',
                closeText: 'Zatvori',
                loadingText: 'Učitavanje…',
                noOptionsText: 'Nema opcija',
                openText: 'Otvori'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Zatvori'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigacija po stranicama',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Idi na '}stranicu ${page}`;
                    }
                    if (type === 'first') {
                        return 'Idi na prvu stranicu';
                    }
                    if (type === 'last') {
                        return 'Idi na zadnju stranicu';
                    }
                    if (type === 'next') {
                        return 'Idi na sledeću stranicu';
                    }
                    // if (type === 'previous') {
                    return 'Idi na prethodnu stranicu';
                }
            }
        }
    }
};
const ruRU = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Показать полный путь'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Перейти на первую страницу';
                    }
                    if (type === 'last') {
                        return 'Перейти на последнюю страницу';
                    }
                    if (type === 'next') {
                        return 'Перейти на следующую страницу';
                    }
                    // if (type === 'previous') {
                    return 'Перейти на предыдущую страницу';
                },
                labelRowsPerPage: 'Строк на странице:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} из ${count !== -1 ? count : `более чем ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    let pluralForm = 'Звёзд';
                    const lastDigit = value % 10;
                    if (lastDigit > 1 && lastDigit < 5) {
                        pluralForm = 'Звезды';
                    } else if (lastDigit === 1) {
                        pluralForm = 'Звезда';
                    }
                    return `${value} ${pluralForm}`;
                },
                emptyLabelText: 'Рейтинг отсутствует'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Очистить',
                closeText: 'Закрыть',
                loadingText: 'Загрузка…',
                noOptionsText: 'Нет доступных вариантов',
                openText: 'Открыть'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Закрыть'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Навигация по страницам',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        if (selected) {
                            return `${page} страница`;
                        }
                        return `Перейти на ${page} страницу`;
                    }
                    if (type === 'first') {
                        return 'Перейти на первую страницу';
                    }
                    if (type === 'last') {
                        return 'Перейти на последнюю страницу';
                    }
                    if (type === 'next') {
                        return 'Перейти на следующую страницу';
                    }
                    // if (type === 'previous') {
                    return 'Перейти на предыдущую страницу';
                }
            }
        }
    }
};
const siLK = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'ගමන් මඟ පෙන්වන්න'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'පළමු පිටුවට යන්න';
                    }
                    if (type === 'last') {
                        return 'අවසාන පිටුවට යන්න';
                    }
                    if (type === 'next') {
                        return 'මීළඟ පිටුවට යන්න';
                    }
                    // if (type === 'previous') {
                    return 'පෙර පිටුවට යන්න';
                },
                labelRowsPerPage: 'පිටුවක පේළි:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} දක්වා ${count !== -1 ? count : `${to} ට වැඩි ප්‍රමාණයකින්`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`තරු ${value}`,
                emptyLabelText: 'හිස්'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'මකන්න',
                closeText: 'වසන්න',
                loadingText: 'නැංවෙමින්…',
                noOptionsText: 'විකල්ප නැත',
                openText: 'විවෘත කරන්න'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'වසන්න'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'පිටු අතර සංචරණය',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `පිටුව ${page} ${selected ? '' : 'ට යන්න'}`;
                    }
                    if (type === 'first') {
                        return 'පළමු පිටුවට යන්න';
                    }
                    if (type === 'last') {
                        return 'අවසාන පිටුවට යන්න';
                    }
                    if (type === 'next') {
                        return 'මීළඟ පිටුවට යන්න';
                    }
                    // if (type === 'previous') {
                    return 'පෙර පිටුවට යන්න';
                }
            }
        }
    }
};
const skSK = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Ukázať cestu '
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Ísť na prvú stránku';
                    }
                    if (type === 'last') {
                        return 'Ísť na poslednú stránku';
                    }
                    if (type === 'next') {
                        return 'Ísť na ďaľšiu stránku';
                    }
                    // if (type === 'previous') {
                    return 'Ísť na predchádzajúcu stránku';
                },
                labelRowsPerPage: 'Riadkov na stránke:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} z ${count !== -1 ? count : `viac ako ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    if (value === 1) {
                        return `${value} hviezdička`;
                    }
                    if (value >= 2 && value <= 4) {
                        return `${value} hviezdičky`;
                    }
                    return `${value} hviezdičiek`;
                },
                emptyLabelText: 'Prázdne'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Vymazať',
                closeText: 'Zavrieť',
                loadingText: 'Načítanie…',
                noOptionsText: 'Žiadne možnosti',
                openText: 'Otvoriť'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Zavrieť'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Navigácia stránkovanim',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Ísť na '}stránku ${page}`;
                    }
                    if (type === 'first') {
                        return 'Ísť na prvú stránku';
                    }
                    if (type === 'last') {
                        return 'Ísť na poslednú stránku';
                    }
                    if (type === 'next') {
                        return 'Ísť na ďaľšiu stránku';
                    }
                    // if (type === 'previous') {
                    return 'Ísť na predchádzajúcu stránku';
                }
            }
        }
    }
};
const svSE = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Visa sökväg'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Gå till första sidan';
                    }
                    if (type === 'last') {
                        return 'Gå till sista sidan';
                    }
                    if (type === 'next') {
                        return 'Gå till nästa sida';
                    }
                    // if (type === 'previous') {
                    return 'Gå till föregående sida';
                },
                labelRowsPerPage: 'Rader per sida:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} av ${count !== -1 ? count : `fler än ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ${value !== 1 ? 'Stjärnor' : 'Stjärna'}`,
                emptyLabelText: 'Tom'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Rensa',
                closeText: 'Stäng',
                loadingText: 'Laddar…',
                noOptionsText: 'Inga alternativ',
                openText: 'Öppna'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Stäng'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Sidnavigering',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Gå till '}sida ${page}`;
                    }
                    if (type === 'first') {
                        return 'Gå till första sidan';
                    }
                    if (type === 'last') {
                        return 'Gå till sista sidan';
                    }
                    if (type === 'next') {
                        return 'Gå till nästa sida';
                    }
                    // if (type === 'previous') {
                    return 'Gå till föregående sida';
                }
            }
        }
    }
};
const thTH = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'แสดงเส้นทาง'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'ไปที่หน้าแรก';
                    }
                    if (type === 'last') {
                        return 'ไปที่หน้าสุดท้าย';
                    }
                    if (type === 'next') {
                        return 'ไปที่หน้าถัดไป';
                    }
                    // if (type === 'previous') {
                    return 'ไปที่หน้าก่อน';
                },
                labelRowsPerPage: 'จำนวนแถวต่อหน้า:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} จาก ${count !== -1 ? count : `มากกว่า ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ดาว`,
                emptyLabelText: 'ว่างเปล่า'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'เคลียร์',
                closeText: 'ปิด',
                loadingText: 'กำลังโหลด…',
                noOptionsText: 'ไม่มีตัวเลือก',
                openText: 'เปิด'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'ปิด'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': '',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'ไปที่'}หน้า ${page}`;
                    }
                    if (type === 'first') {
                        return 'ไปที่หน้าแรก';
                    }
                    if (type === 'last') {
                        return 'ไปที่หน้าสุดท้าย';
                    }
                    if (type === 'next') {
                        return 'ไปที่หน้าถัดไป';
                    }
                    // if (type === 'previous') {
                    return 'ไปที่หน้าก่อน';
                }
            }
        }
    }
};
const trTR = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Yolu göster'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'İlk sayfaya git';
                    }
                    if (type === 'last') {
                        return 'Son sayfaya git';
                    }
                    if (type === 'next') {
                        return 'Sonraki sayfaya git';
                    }
                    // if (type === 'previous') {
                    return 'Önceki sayfaya git';
                },
                labelRowsPerPage: 'Sayfa başına satır:',
                labelDisplayedRows: ({ from, to, count })=>`${from}-${to} / ${count !== -1 ? count : `${to}'den fazla`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Yıldız`,
                emptyLabelText: 'Boş'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Temizle',
                closeText: 'Kapat',
                loadingText: 'Yükleniyor…',
                noOptionsText: 'Seçenek yok',
                openText: 'Aç'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Kapat'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Sayfa navigasyonu',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${page}. ${selected ? 'sayfa' : 'sayfaya git'}`;
                    }
                    if (type === 'first') {
                        return 'İlk sayfaya git';
                    }
                    if (type === 'last') {
                        return 'Son sayfaya git';
                    }
                    if (type === 'next') {
                        return 'Sonraki sayfaya git';
                    }
                    // if (type === 'previous') {
                    return 'Önceki sayfaya git';
                }
            }
        }
    }
};
const tlTL = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Ipakita ang landas'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Pumunta sa unang pahina';
                    }
                    if (type === 'last') {
                        return 'Pumunta sa huling pahina';
                    }
                    if (type === 'next') {
                        return 'Pumunta sa susunod na pahina';
                    }
                    // if (type === 'previous') {
                    return 'Pumunta sa nakaraang pahina';
                },
                labelRowsPerPage: 'Mga hilera bawat pahina:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} ng ${count !== -1 ? count : `higit sa ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} Bituin${value !== 1 ? 's' : ''}`,
                emptyLabelText: 'Walang laman'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Maaliwalas',
                closeText: 'Isara',
                loadingText: 'Naglo-load…',
                noOptionsText: 'Walang mga pagpipilian',
                openText: 'Bukas'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Isara'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Sayfa navigasyonu',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Pumunta sa'}pahina ${page}`;
                    }
                    if (type === 'first') {
                        return 'Pumunta sa unang pahina';
                    }
                    if (type === 'last') {
                        return 'Pumunta sa huling pahina';
                    }
                    if (type === 'next') {
                        return 'Pumunta sa susunod na pahina';
                    }
                    // if (type === 'previous') {
                    return 'Pumunta sa nakaraang pahina';
                }
            }
        }
    }
};
const ukUA = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Показати шлях сторінок'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Перейти на першу сторінку';
                    }
                    if (type === 'last') {
                        return 'Перейти на останню сторінку';
                    }
                    if (type === 'next') {
                        return 'Перейти на наступну сторінку';
                    }
                    // if (type === 'previous') {
                    return 'Перейти на попередню сторінку';
                },
                labelRowsPerPage: 'Рядків на сторінці:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} з ${count !== -1 ? count : `понад ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>{
                    let pluralForm = 'Зірок';
                    const lastDigit = value % 10;
                    if (lastDigit > 1 && lastDigit < 5) {
                        pluralForm = 'Зірки';
                    } else if (lastDigit === 1) {
                        pluralForm = 'Зірка';
                    }
                    return `${value} ${pluralForm}`;
                },
                emptyLabelText: 'Рейтинг відсутній'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Очистити',
                closeText: 'Згорнути',
                loadingText: 'Завантаження…',
                noOptionsText: 'Немає варіантів',
                openText: 'Розгорнути'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Згорнути'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Навігація сторінками',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Перейти на '}сторінку ${page}`;
                    }
                    if (type === 'first') {
                        return 'Перейти на першу сторінку';
                    }
                    if (type === 'last') {
                        return 'Перейти на останню сторінку';
                    }
                    if (type === 'next') {
                        return 'Перейти на наступну сторінку';
                    }
                    // if (type === 'previous') {
                    return 'Перейти на попередню сторінку';
                }
            }
        }
    }
};
const urPK = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'راستہ دکھائیں'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'پہلے صفحے پر جائیں';
                    }
                    if (type === 'last') {
                        return 'آخری صفحے پر جائیں';
                    }
                    if (type === 'next') {
                        return 'اگلے صفحے پر جائیں';
                    }
                    // if (type === 'previous') {
                    return 'پچھلے صفحے پر جائیں';
                },
                labelRowsPerPage: 'ایک صفحے پر قطاریں:',
                labelDisplayedRows: ({ from, to, count })=>`${count !== -1 ? `${count} میں سے` : `${to} سے ذیادہ میں سے`} ${from} سے ${to} قطاریں`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} ستار${value !== 1 ? 'ے' : 'ہ'}`,
                emptyLabelText: 'خالی'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'کلئیر',
                closeText: 'بند کریں',
                loadingText: 'لوڈ ہو رہا ہے۔۔۔',
                noOptionsText: 'کوئی آپشن نہیں',
                openText: 'کھولیں'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'بند کریں'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'صفحات کی ترتیب',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `صفحہ نمبر ${page}${selected ? '' : ' پر جائیں'}`;
                    }
                    if (type === 'first') {
                        return 'پہلے صفحے پر جائیں';
                    }
                    if (type === 'last') {
                        return 'آخری صفحے پر جائیں';
                    }
                    if (type === 'next') {
                        return 'اگلے صفحے پر جائیں';
                    }
                    // if (type === 'previous') {
                    return 'پچھلے صفحے پر جائیں';
                }
            }
        }
    }
};
const viVN = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: 'Mở ra'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return 'Tới trang đầu tiên';
                    }
                    if (type === 'last') {
                        return 'Tới trang cuối cùng';
                    }
                    if (type === 'next') {
                        return 'Tới trang tiếp theo';
                    }
                    // if (type === 'previous') {
                    return 'Về trang trước đó';
                },
                labelRowsPerPage: 'Số hàng mỗi trang:',
                labelDisplayedRows: ({ from, to, count })=>`${from}–${to} trong ${count !== -1 ? count : `nhiều hơn ${to}`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} sao`,
                emptyLabelText: 'Không có dữ liệu'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: 'Xóa',
                closeText: 'Đóng',
                loadingText: 'Đang tải…',
                noOptionsText: 'Không có lựa chọn nào',
                openText: 'Mở'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: 'Đóng'
            }
        },
        MuiPagination: {
            defaultProps: {
                'aria-label': 'Thanh điều khiển trang',
                getItemAriaLabel: (type, page, selected)=>{
                    if (type === 'page') {
                        return `${selected ? '' : 'Tới '}trang ${page}`;
                    }
                    if (type === 'first') {
                        return 'Tới trang đầu tiên';
                    }
                    if (type === 'last') {
                        return 'Tới trang cuối cùng';
                    }
                    if (type === 'next') {
                        return 'Tới trang tiếp theo';
                    }
                    // if (type === 'previous') {
                    return 'Về trang trước đó';
                }
            }
        }
    }
};
const zhCN = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: '展开'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return '第一页';
                    }
                    if (type === 'last') {
                        return '最后一页';
                    }
                    if (type === 'next') {
                        return '下一页';
                    }
                    return '上一页';
                },
                labelRowsPerPage: '每页行数:',
                labelDisplayedRows: ({ from, to, count })=>`第 ${from} 条到第 ${to} 条，${count !== -1 ? `共 ${count} 条` : `至少 ${to} 条`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} 颗星`,
                emptyLabelText: '无标签'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: '清空',
                closeText: '关闭',
                loadingText: '加载中……',
                noOptionsText: '没有可用选项',
                openText: '打开'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: '关闭'
            }
        }
    }
};
const zhHK = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: '展開'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return '第一頁';
                    }
                    if (type === 'last') {
                        return '最後一頁';
                    }
                    if (type === 'next') {
                        return '下一頁';
                    }
                    return '上一頁';
                },
                labelRowsPerPage: '每頁行數:',
                labelDisplayedRows: ({ from, to, count })=>`第 ${from} 項至第 ${to} 項，${count !== -1 ? `共 ${count} 項` : `超過 ${to} 項`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} 粒星`,
                emptyLabelText: '無標籤'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: '清除',
                closeText: '關閉',
                loadingText: '載入中……',
                noOptionsText: '沒有可用選項',
                openText: '開啟'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: '關閉'
            }
        }
    }
};
const zhTW = {
    components: {
        MuiBreadcrumbs: {
            defaultProps: {
                expandText: '展開'
            }
        },
        MuiTablePagination: {
            defaultProps: {
                getItemAriaLabel: (type)=>{
                    if (type === 'first') {
                        return '第一頁';
                    }
                    if (type === 'last') {
                        return '最後一頁';
                    }
                    if (type === 'next') {
                        return '下一頁';
                    }
                    return '上一頁';
                },
                labelRowsPerPage: '每頁數量:',
                labelDisplayedRows: ({ from, to, count })=>`${from} ~ ${to} / ${count !== -1 ? count : `${to} 以上`}`
            }
        },
        MuiRating: {
            defaultProps: {
                getLabelText: (value)=>`${value} 顆星`,
                emptyLabelText: '無標籤'
            }
        },
        MuiAutocomplete: {
            defaultProps: {
                clearText: '清空',
                closeText: '關閉',
                loadingText: '載入中…',
                noOptionsText: '沒有可用選項',
                openText: '打開'
            }
        },
        MuiAlert: {
            defaultProps: {
                closeText: '關閉'
            }
        }
    }
};

})()),

};

//# sourceMappingURL=node_modules_%40mui_material_7776b1._.js.map